import{_ as n,c as a,o as l,ag as p}from"./chunks/framework.S-Qvb3wi.js";const u=JSON.parse('{"title":"🚀 Enhanced Response Handler - Modern API","description":"","frontmatter":{},"headers":[],"relativePath":"NEW_API_README.md","filePath":"NEW_API_README.md"}'),e={name:"NEW_API_README.md"};function o(r,s,c,t,i,E){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="🚀-enhanced-response-handler-modern-api" tabindex="-1">🚀 Enhanced Response Handler - Modern API <a class="header-anchor" href="#🚀-enhanced-response-handler-modern-api" aria-label="Permalink to &quot;🚀 Enhanced Response Handler - Modern API&quot;">​</a></h1><p>The next-generation response handler with middleware-based configuration, developer-friendly API, and comprehensive features.</p><h2 id="✨-key-features" tabindex="-1">✨ Key Features <a class="header-anchor" href="#✨-key-features" aria-label="Permalink to &quot;✨ Key Features&quot;">​</a></h2><ul><li><strong>🎯 One-line responses</strong>: Just use <code>res.ok(data)</code> or <code>res.error(error)</code></li><li><strong>🔧 Middleware-based setup</strong>: Configure once, use everywhere</li><li><strong>🌍 Environment-aware</strong>: Different behaviors for development vs production</li><li><strong>📊 Built-in logging</strong>: Comprehensive request/response/error logging</li><li><strong>🔒 Security-first</strong>: Automatic error sanitization in production</li><li><strong>⚡ Performance optimized</strong>: Built-in caching, compression, ETag support</li><li><strong>🎭 Dual response modes</strong>: Developer-friendly vs client-friendly responses</li><li><strong>📡 Enhanced Socket.IO</strong>: Modern API for real-time applications</li><li><strong>📈 Request tracking</strong>: Automatic request IDs and execution timing</li></ul><h2 id="🚀-quick-start" tabindex="-1">🚀 Quick Start <a class="header-anchor" href="#🚀-quick-start" aria-label="Permalink to &quot;🚀 Quick Start&quot;">​</a></h2><h3 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#9ECBFF;"> install</span><span style="color:#9ECBFF;"> @amitkandar/response-handler</span><span style="color:#9ECBFF;"> uuid</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="express-setup-modern-api" tabindex="-1">Express Setup (Modern API) <a class="header-anchor" href="#express-setup-modern-api" aria-label="Permalink to &quot;Express Setup (Modern API)&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> express</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;express&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">quickSetup</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> app</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> express</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(express.</span><span style="color:#B392F0;">json</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 🎉 One-line setup with powerful configuration</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">middleware</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">errorHandler</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> quickSetup</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&#39;development&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// &#39;production&#39; for live apps</span></span>
<span class="line"><span style="color:#E1E4E8;">  logging: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    enabled: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    logErrors: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    logRequests: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  responses: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    includeRequestId: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    includeExecutionTime: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(middleware);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// ✨ Modern, clean API</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/users&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> users</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> getUsersFromDB</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(users, </span><span style="color:#9ECBFF;">&#39;Users retrieved successfully&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/users&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">req.body.email) {</span></span>
<span class="line"><span style="color:#F97583;">    return</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">({ field: </span><span style="color:#9ECBFF;">&#39;email&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Email is required&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> user</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> createUser</span><span style="color:#E1E4E8;">(req.body);</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">created</span><span style="color:#E1E4E8;">(user);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(errorHandler); </span><span style="color:#6A737D;">// Must be last!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h3 id="socket-io-setup-modern-api" tabindex="-1">Socket.IO Setup (Modern API) <a class="header-anchor" href="#socket-io-setup-modern-api" aria-label="Permalink to &quot;Socket.IO Setup (Modern API)&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">quickSocketSetup</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">enhance</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">wrapper</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> quickSocketSetup</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&#39;development&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  logging: { enabled: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">io.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;connection&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">  // Simple event handling</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;get-user&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> response</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> enhance</span><span style="color:#E1E4E8;">(socket, </span><span style="color:#9ECBFF;">&#39;user-data&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">data.userId) {</span></span>
<span class="line"><span style="color:#F97583;">      return</span><span style="color:#E1E4E8;"> response.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;User ID required&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> user</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> getUserById</span><span style="color:#E1E4E8;">(data.userId);</span></span>
<span class="line"><span style="color:#E1E4E8;">    response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(user);</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Automatic error handling with wrapper</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#9ECBFF;">    &#39;create-post&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    wrapper</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> post</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> createPost</span><span style="color:#E1E4E8;">(data);</span></span>
<span class="line"><span style="color:#E1E4E8;">      response.</span><span style="color:#B392F0;">created</span><span style="color:#E1E4E8;">(post);</span></span>
<span class="line"><span style="color:#6A737D;">      // Errors are automatically caught and emitted!</span></span>
<span class="line"><span style="color:#E1E4E8;">    }),</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="📚-complete-api-reference" tabindex="-1">📚 Complete API Reference <a class="header-anchor" href="#📚-complete-api-reference" aria-label="Permalink to &quot;📚 Complete API Reference&quot;">​</a></h2><h3 id="express-response-methods" tabindex="-1">Express Response Methods <a class="header-anchor" href="#express-response-methods" aria-label="Permalink to &quot;Express Response Methods&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// ✅ Success Responses</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(data, message); </span><span style="color:#6A737D;">// 200 OK</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">created</span><span style="color:#E1E4E8;">(data, message); </span><span style="color:#6A737D;">// 201 Created</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">accepted</span><span style="color:#E1E4E8;">(data, message); </span><span style="color:#6A737D;">// 202 Accepted</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">noContent</span><span style="color:#E1E4E8;">(message); </span><span style="color:#6A737D;">// 204 No Content</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// ❌ Error Responses</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">(error, message); </span><span style="color:#6A737D;">// 400 Bad Request</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">unauthorized</span><span style="color:#E1E4E8;">(error, message); </span><span style="color:#6A737D;">// 401 Unauthorized</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">forbidden</span><span style="color:#E1E4E8;">(error, message); </span><span style="color:#6A737D;">// 403 Forbidden</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">notFound</span><span style="color:#E1E4E8;">(error, message); </span><span style="color:#6A737D;">// 404 Not Found</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">conflict</span><span style="color:#E1E4E8;">(error, message); </span><span style="color:#6A737D;">// 409 Conflict</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">unprocessableEntity</span><span style="color:#E1E4E8;">(error, message); </span><span style="color:#6A737D;">// 422 Unprocessable Entity</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">tooManyRequests</span><span style="color:#E1E4E8;">(error, message); </span><span style="color:#6A737D;">// 429 Too Many Requests</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">internalServerError</span><span style="color:#E1E4E8;">(error, message); </span><span style="color:#6A737D;">// 500 Internal Server Error</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 🔧 Generic Methods</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">respond</span><span style="color:#E1E4E8;">(statusCode, data, message); </span><span style="color:#6A737D;">// Custom status code</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(error, statusCode); </span><span style="color:#6A737D;">// Auto-determine from error</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">paginate</span><span style="color:#E1E4E8;">(data, pagination, message); </span><span style="color:#6A737D;">// Paginated responses</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="socket-io-response-methods" tabindex="-1">Socket.IO Response Methods <a class="header-anchor" href="#socket-io-response-methods" aria-label="Permalink to &quot;Socket.IO Response Methods&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> response</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> enhance</span><span style="color:#E1E4E8;">(socket, </span><span style="color:#9ECBFF;">&#39;event-name&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Success responses</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(data, message);</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">created</span><span style="color:#E1E4E8;">(data, message);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Error responses</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(error, code);</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">(error, message);</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">unauthorized</span><span style="color:#E1E4E8;">(error, message);</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">forbidden</span><span style="color:#E1E4E8;">(error, message);</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">notFound</span><span style="color:#E1E4E8;">(error, message);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Targeting</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">toRoom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;room-name&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(data);</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">toSocket</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;socket-id&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(error);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="⚙️-configuration-options" tabindex="-1">⚙️ Configuration Options <a class="header-anchor" href="#⚙️-configuration-options" aria-label="Permalink to &quot;⚙️ Configuration Options&quot;">​</a></h2><h3 id="full-configuration-example" tabindex="-1">Full Configuration Example <a class="header-anchor" href="#full-configuration-example" aria-label="Permalink to &quot;Full Configuration Example&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> config</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">  // 🌍 Environment mode</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&#39;development&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// or &#39;production&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // 📊 Logging configuration</span></span>
<span class="line"><span style="color:#E1E4E8;">  logging: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    enabled: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    level: </span><span style="color:#9ECBFF;">&#39;info&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// &#39;error&#39;, &#39;warn&#39;, &#39;info&#39;, &#39;debug&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    logErrors: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    logRequests: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    logResponses: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    includeStack: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// Include stack traces</span></span>
<span class="line"><span style="color:#E1E4E8;">    includeRequest: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// Include request details</span></span>
<span class="line"><span style="color:#B392F0;">    customLogger</span><span style="color:#E1E4E8;">: (</span><span style="color:#FFAB70;">level</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">message</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">meta</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">      // Use your preferred logger (Winston, Bunyan, etc.)</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // 📝 Response configuration</span></span>
<span class="line"><span style="color:#E1E4E8;">  responses: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    includeTimestamp: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    includeRequestId: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    includeExecutionTime: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    customFields: { version: </span><span style="color:#9ECBFF;">&#39;1.0.0&#39;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    pagination: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // 🔒 Security configuration</span></span>
<span class="line"><span style="color:#E1E4E8;">  security: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    sanitizeErrors: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    hideInternalErrors: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// true in production</span></span>
<span class="line"><span style="color:#E1E4E8;">    allowedErrorFields: [</span><span style="color:#9ECBFF;">&#39;message&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;type&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;code&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    corsHeaders: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // ⚡ Performance configuration</span></span>
<span class="line"><span style="color:#E1E4E8;">  performance: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    enableCaching: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    cacheHeaders: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    etag: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    compression: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h2 id="🌟-advanced-features" tabindex="-1">🌟 Advanced Features <a class="header-anchor" href="#🌟-advanced-features" aria-label="Permalink to &quot;🌟 Advanced Features&quot;">​</a></h2><h3 id="_1-response-modes" tabindex="-1">1. Response Modes <a class="header-anchor" href="#_1-response-modes" aria-label="Permalink to &quot;1. Response Modes&quot;">​</a></h3><p><strong>Development Mode</strong> (Detailed errors, full stack traces):</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;success&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;message&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Database connection failed&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;error&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;DatabaseError&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;code&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;CONN_FAILED&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;details&quot;</span><span style="color:#E1E4E8;">: { </span><span style="color:#79B8FF;">&quot;host&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;localhost&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">&quot;port&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5432</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;stack&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Error: Database connection failed</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">    at...&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;meta&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;requestId&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;req-123&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;timestamp&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2024-01-01T10:00:00Z&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;executionTime&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1250</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;environment&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;development&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>Production Mode</strong> (Sanitized, secure):</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;success&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;message&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;An internal error occurred&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;error&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;InternalError&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;code&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;ERR_INTERNAL&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;meta&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;requestId&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;req-123&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;timestamp&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2024-01-01T10:00:00Z&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="_2-automatic-request-tracking" tabindex="-1">2. Automatic Request Tracking <a class="header-anchor" href="#_2-automatic-request-tracking" aria-label="Permalink to &quot;2. Automatic Request Tracking&quot;">​</a></h3><p>Every request gets:</p><ul><li>Unique request ID</li><li>Execution time tracking</li><li>Comprehensive logging</li><li>Error correlation</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/users&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(req.requestId); </span><span style="color:#6A737D;">// Auto-generated UUID</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(req.startTime); </span><span style="color:#6A737D;">// Request start timestamp</span></span>
<span class="line"><span style="color:#6A737D;">  // Response automatically includes execution time</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_3-pagination-helper" tabindex="-1">3. Pagination Helper <a class="header-anchor" href="#_3-pagination-helper" aria-label="Permalink to &quot;3. Pagination Helper&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/posts&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">page</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> 1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">limit</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> 10</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> req.query;</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> posts</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> getPostsPaginated</span><span style="color:#E1E4E8;">(page, limit);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">paginate</span><span style="color:#E1E4E8;">(posts, {</span></span>
<span class="line"><span style="color:#E1E4E8;">    page: </span><span style="color:#B392F0;">parseInt</span><span style="color:#E1E4E8;">(page),</span></span>
<span class="line"><span style="color:#E1E4E8;">    limit: </span><span style="color:#B392F0;">parseInt</span><span style="color:#E1E4E8;">(limit),</span></span>
<span class="line"><span style="color:#E1E4E8;">    total: </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> getTotalPosts</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    totalPages: Math.</span><span style="color:#B392F0;">ceil</span><span style="color:#E1E4E8;">((</span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> getTotalPosts</span><span style="color:#E1E4E8;">()) </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> limit),</span></span>
<span class="line"><span style="color:#E1E4E8;">    hasNext: page </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> totalPages,</span></span>
<span class="line"><span style="color:#E1E4E8;">    hasPrev: page </span><span style="color:#F97583;">&gt;</span><span style="color:#79B8FF;"> 1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>Response:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;success&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;data&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#FDAEB7;font-style:italic;">...</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;message&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Posts retrieved successfully&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;meta&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;pagination&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;page&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;limit&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;total&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">150</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;totalPages&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;hasNext&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;hasPrev&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_4-enhanced-socket-io-features" tabindex="-1">4. Enhanced Socket.IO Features <a class="header-anchor" href="#_4-enhanced-socket-io-features" aria-label="Permalink to &quot;4. Enhanced Socket.IO Features&quot;">​</a></h3><h4 id="room-broadcasting" tabindex="-1">Room Broadcasting <a class="header-anchor" href="#room-broadcasting" aria-label="Permalink to &quot;Room Broadcasting&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;announcement&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> response</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> enhance</span><span style="color:#E1E4E8;">(socket, </span><span style="color:#9ECBFF;">&#39;announcement-sent&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Broadcast to all users in a room</span></span>
<span class="line"><span style="color:#E1E4E8;">  response.</span><span style="color:#B392F0;">toRoom</span><span style="color:#E1E4E8;">(data.roomId).</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      message: data.message,</span></span>
<span class="line"><span style="color:#E1E4E8;">      from: socket.id,</span></span>
<span class="line"><span style="color:#E1E4E8;">      timestamp: </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Date</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">toISOString</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#9ECBFF;">    &#39;New announcement&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Confirm to sender</span></span>
<span class="line"><span style="color:#E1E4E8;">  response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">({ messageId: Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">() }, </span><span style="color:#9ECBFF;">&#39;Announcement sent&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h4 id="private-messaging" tabindex="-1">Private Messaging <a class="header-anchor" href="#private-messaging" aria-label="Permalink to &quot;Private Messaging&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;private-message&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> response</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> enhance</span><span style="color:#E1E4E8;">(socket, </span><span style="color:#9ECBFF;">&#39;message-received&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Send to specific socket</span></span>
<span class="line"><span style="color:#E1E4E8;">  response.</span><span style="color:#B392F0;">toSocket</span><span style="color:#E1E4E8;">(data.targetId).</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    from: socket.id,</span></span>
<span class="line"><span style="color:#E1E4E8;">    message: data.message,</span></span>
<span class="line"><span style="color:#E1E4E8;">    private: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="auto-error-handling" tabindex="-1">Auto Error Handling <a class="header-anchor" href="#auto-error-handling" aria-label="Permalink to &quot;Auto Error Handling&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#9ECBFF;">  &#39;risky-operation&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">  wrapper</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">    // Any error thrown here is automatically caught and emitted</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> result</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> riskyAsyncOperation</span><span style="color:#E1E4E8;">(data);</span></span>
<span class="line"><span style="color:#E1E4E8;">    response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(result);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }),</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_5-custom-error-mapping" tabindex="-1">5. Custom Error Mapping <a class="header-anchor" href="#_5-custom-error-mapping" aria-label="Permalink to &quot;5. Custom Error Mapping&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">createResponseHandler</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> handler</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> createResponseHandler</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  errorMapping: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    ValidationError: { statusCode: </span><span style="color:#79B8FF;">422</span><span style="color:#E1E4E8;">, clientMessage: </span><span style="color:#9ECBFF;">&#39;Invalid input&#39;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    AuthError: { statusCode: </span><span style="color:#79B8FF;">401</span><span style="color:#E1E4E8;">, clientMessage: </span><span style="color:#9ECBFF;">&#39;Authentication required&#39;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    RateLimitError: { statusCode: </span><span style="color:#79B8FF;">429</span><span style="color:#E1E4E8;">, clientMessage: </span><span style="color:#9ECBFF;">&#39;Too many requests&#39;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_6-middleware-integration" tabindex="-1">6. Middleware Integration <a class="header-anchor" href="#_6-middleware-integration" aria-label="Permalink to &quot;6. Middleware Integration&quot;">​</a></h3><p>Works seamlessly with other Express middleware:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> rateLimit</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;express-rate-limit&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> helmet</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;helmet&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Other middleware first</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">helmet</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">rateLimit</span><span style="color:#E1E4E8;">({ windowMs: </span><span style="color:#79B8FF;">15</span><span style="color:#F97583;"> *</span><span style="color:#79B8FF;"> 60</span><span style="color:#F97583;"> *</span><span style="color:#79B8FF;"> 1000</span><span style="color:#E1E4E8;">, max: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;"> }));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Then response handler</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(middleware);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Your routes</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/api/data&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  res.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">({ message: </span><span style="color:#9ECBFF;">&#39;All middleware working together!&#39;</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Error handler last</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(errorHandler);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="📋-migration-guide" tabindex="-1">📋 Migration Guide <a class="header-anchor" href="#📋-migration-guide" aria-label="Permalink to &quot;📋 Migration Guide&quot;">​</a></h2><h3 id="from-old-api-to-new-api" tabindex="-1">From Old API to New API <a class="header-anchor" href="#from-old-api-to-new-api" aria-label="Permalink to &quot;From Old API to New API&quot;">​</a></h3><p><strong>Old way:</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">sendSuccess</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">sendError</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">errorHandler</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/users&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> users</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> getUsers</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#B392F0;">    sendSuccess</span><span style="color:#E1E4E8;">(res, users, </span><span style="color:#9ECBFF;">&#39;Users retrieved&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="color:#B392F0;">    sendError</span><span style="color:#E1E4E8;">(res, error);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(errorHandler);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>New way:</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">quickSetup</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">middleware</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">errorHandler</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> quickSetup</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(middleware);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/users&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> users</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> getUsers</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// Errors auto-caught by errorHandler</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(users, </span><span style="color:#9ECBFF;">&#39;Users retrieved&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(errorHandler);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="socket-io-migration" tabindex="-1">Socket.IO Migration <a class="header-anchor" href="#socket-io-migration" aria-label="Permalink to &quot;Socket.IO Migration&quot;">​</a></h3><p><strong>Old way:</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">emitSuccess</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">emitError</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;get-user&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> user</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> getUser</span><span style="color:#E1E4E8;">(data.id);</span></span>
<span class="line"><span style="color:#B392F0;">    emitSuccess</span><span style="color:#E1E4E8;">({ socket, event: </span><span style="color:#9ECBFF;">&#39;user-data&#39;</span><span style="color:#E1E4E8;">, data: user });</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="color:#B392F0;">    emitError</span><span style="color:#E1E4E8;">({ socket, event: </span><span style="color:#9ECBFF;">&#39;user-data&#39;</span><span style="color:#E1E4E8;">, error });</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>New way:</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">quickSocketSetup</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">enhance</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> quickSocketSetup</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;get-user&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> response</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> enhance</span><span style="color:#E1E4E8;">(socket, </span><span style="color:#9ECBFF;">&#39;user-data&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">  try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> user</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> getUser</span><span style="color:#E1E4E8;">(data.id);</span></span>
<span class="line"><span style="color:#E1E4E8;">    response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(user);</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    response.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(error);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="🔧-development-vs-production" tabindex="-1">🔧 Development vs Production <a class="header-anchor" href="#🔧-development-vs-production" aria-label="Permalink to &quot;🔧 Development vs Production&quot;">​</a></h2><h3 id="development-features" tabindex="-1">Development Features <a class="header-anchor" href="#development-features" aria-label="Permalink to &quot;Development Features&quot;">​</a></h3><ul><li>Detailed error messages with stack traces</li><li>Full request/response logging</li><li>Performance metrics</li><li>Debug information in responses</li><li>Unfiltered error details</li></ul><h3 id="production-features" tabindex="-1">Production Features <a class="header-anchor" href="#production-features" aria-label="Permalink to &quot;Production Features&quot;">​</a></h3><ul><li>Sanitized error messages</li><li>Internal error hiding</li><li>Minimal logging (errors only by default)</li><li>Security headers</li><li>Optimized performance</li><li>Client-safe error responses</li></ul><h3 id="environment-detection" tabindex="-1">Environment Detection <a class="header-anchor" href="#environment-detection" aria-label="Permalink to &quot;Environment Detection&quot;">​</a></h3><p>The library automatically detects the environment:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// Automatic detection</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> config</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {}; </span><span style="color:#6A737D;">// Uses NODE_ENV</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Manual override</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> config</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> { mode: </span><span style="color:#9ECBFF;">&#39;production&#39;</span><span style="color:#E1E4E8;"> };</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="📊-logging-examples" tabindex="-1">📊 Logging Examples <a class="header-anchor" href="#📊-logging-examples" aria-label="Permalink to &quot;📊 Logging Examples&quot;">​</a></h2><h3 id="request-logging" tabindex="-1">Request Logging <a class="header-anchor" href="#request-logging" aria-label="Permalink to &quot;Request Logging&quot;">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span>[2024-01-01T10:00:00.000Z] [INFO] Incoming GET request to /api/users {</span></span>
<span class="line"><span>  &quot;method&quot;: &quot;GET&quot;,</span></span>
<span class="line"><span>  &quot;url&quot;: &quot;/api/users&quot;,</span></span>
<span class="line"><span>  &quot;userAgent&quot;: &quot;Mozilla/5.0...&quot;,</span></span>
<span class="line"><span>  &quot;ip&quot;: &quot;127.0.0.1&quot;,</span></span>
<span class="line"><span>  &quot;requestId&quot;: &quot;req-abc123&quot;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="response-logging" tabindex="-1">Response Logging <a class="header-anchor" href="#response-logging" aria-label="Permalink to &quot;Response Logging&quot;">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span>[2024-01-01T10:00:00.500Z] [INFO] Response sent with status 200 {</span></span>
<span class="line"><span>  &quot;method&quot;: &quot;GET&quot;,</span></span>
<span class="line"><span>  &quot;url&quot;: &quot;/api/users&quot;,</span></span>
<span class="line"><span>  &quot;statusCode&quot;: 200,</span></span>
<span class="line"><span>  &quot;requestId&quot;: &quot;req-abc123&quot;,</span></span>
<span class="line"><span>  &quot;executionTime&quot;: &quot;500ms&quot;,</span></span>
<span class="line"><span>  &quot;responseSize&quot;: 1024</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="error-logging" tabindex="-1">Error Logging <a class="header-anchor" href="#error-logging" aria-label="Permalink to &quot;Error Logging&quot;">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span>[2024-01-01T10:00:01.000Z] [ERROR] Database connection failed {</span></span>
<span class="line"><span>  &quot;error&quot;: {</span></span>
<span class="line"><span>    &quot;message&quot;: &quot;Connection refused&quot;,</span></span>
<span class="line"><span>    &quot;name&quot;: &quot;ConnectionError&quot;,</span></span>
<span class="line"><span>    &quot;stack&quot;: &quot;Error: Connection refused\\n    at...&quot;</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  &quot;method&quot;: &quot;GET&quot;,</span></span>
<span class="line"><span>  &quot;url&quot;: &quot;/api/users&quot;,</span></span>
<span class="line"><span>  &quot;requestId&quot;: &quot;req-abc123&quot;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="🎯-best-practices" tabindex="-1">🎯 Best Practices <a class="header-anchor" href="#🎯-best-practices" aria-label="Permalink to &quot;🎯 Best Practices&quot;">​</a></h2><h3 id="_1-error-handling" tabindex="-1">1. Error Handling <a class="header-anchor" href="#_1-error-handling" aria-label="Permalink to &quot;1. Error Handling&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// ✅ Good: Let error handler catch everything</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/users&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> users</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> getUsers</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// May throw</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(users);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// ❌ Avoid: Manual try-catch unless needed</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/users&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> users</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> getUsers</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">    return</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(users);</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="color:#F97583;">    return</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(error); </span><span style="color:#6A737D;">// Unnecessary</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_2-response-messages" tabindex="-1">2. Response Messages <a class="header-anchor" href="#_2-response-messages" aria-label="Permalink to &quot;2. Response Messages&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// ✅ Good: Descriptive messages</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(users, </span><span style="color:#9ECBFF;">&#39;Successfully retrieved 15 users&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">notFound</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;User with ID 123 not found&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// ❌ Avoid: Generic messages</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(users, </span><span style="color:#9ECBFF;">&#39;Success&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">notFound</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Not found&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_3-error-objects" tabindex="-1">3. Error Objects <a class="header-anchor" href="#_3-error-objects" aria-label="Permalink to &quot;3. Error Objects&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// ✅ Good: Structured error info</span></span>
<span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    field: </span><span style="color:#9ECBFF;">&#39;email&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    code: </span><span style="color:#9ECBFF;">&#39;INVALID_FORMAT&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    provided: req.body.email,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#9ECBFF;">  &#39;Invalid email format&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// ❌ Avoid: String-only errors</span></span>
<span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Bad email&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="🚀-performance-tips" tabindex="-1">🚀 Performance Tips <a class="header-anchor" href="#🚀-performance-tips" aria-label="Permalink to &quot;🚀 Performance Tips&quot;">​</a></h2><ol><li><strong>Enable Caching</strong>: Set <code>performance.enableCaching: true</code></li><li><strong>Use ETags</strong>: Default enabled, helps with 304 responses</li><li><strong>Compression</strong>: Enable for large responses</li><li><strong>Minimal Logging</strong>: In production, log errors only</li><li><strong>Request ID Reuse</strong>: Use existing headers when available</li></ol><h2 id="🔒-security-features" tabindex="-1">🔒 Security Features <a class="header-anchor" href="#🔒-security-features" aria-label="Permalink to &quot;🔒 Security Features&quot;">​</a></h2><ul><li>Automatic error sanitization in production</li><li>Internal error hiding</li><li>CORS headers support</li><li>Request ID tracking</li><li>Rate limiting integration</li><li>Input validation helpers</li></ul><h2 id="📈-monitoring-integration" tabindex="-1">📈 Monitoring Integration <a class="header-anchor" href="#📈-monitoring-integration" aria-label="Permalink to &quot;📈 Monitoring Integration&quot;">​</a></h2><p>Works with popular monitoring tools:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// Custom logger integration</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> winston</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;winston&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">quickSetup</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">middleware</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">errorHandler</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> quickSetup</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  logging: {</span></span>
<span class="line"><span style="color:#B392F0;">    customLogger</span><span style="color:#E1E4E8;">: (</span><span style="color:#FFAB70;">level</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">message</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">meta</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      winston.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(level, message, meta);</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>The enhanced Response Handler transforms your API development experience with minimal setup and maximum features. Start building better APIs today! 🚀</p>`,86)]))}const b=n(e,[["render",o]]);export{u as __pageData,b as default};
