import{_ as n,c as a,o as l,ag as p}from"./chunks/framework.S-Qvb3wi.js";const u=JSON.parse('{"title":"🚀 Enhanced Response Handler","description":"","frontmatter":{},"headers":[],"relativePath":"Readme.md","filePath":"Readme.md"}'),e={name:"Readme.md"};function o(r,s,c,t,E,i){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="🚀-enhanced-response-handler" tabindex="-1">🚀 Enhanced Response Handler <a class="header-anchor" href="#🚀-enhanced-response-handler" aria-label="Permalink to &quot;🚀 Enhanced Response Handler&quot;">​</a></h1><p>Modern, developer-friendly response handler for Express.js and Socket.IO with middleware-based configuration, comprehensive logging, and environment-aware features.</p><h2 id="✨-key-features" tabindex="-1">✨ Key Features <a class="header-anchor" href="#✨-key-features" aria-label="Permalink to &quot;✨ Key Features&quot;">​</a></h2><ul><li><strong>🎯 One-line responses</strong>: Just use <code>res.ok(data)</code> or <code>res.error(error)</code></li><li><strong>🔧 Middleware-based setup</strong>: Configure once, use everywhere</li><li><strong>🌍 Environment-aware</strong>: Different behaviors for development vs production</li><li><strong>📊 Built-in logging</strong>: Comprehensive request/response/error logging</li><li><strong>🔒 Security-first</strong>: Automatic error sanitization in production</li><li><strong>⚡ Performance optimized</strong>: Built-in caching, compression, ETag support</li><li><strong>🎭 Dual response modes</strong>: Developer-friendly vs client-friendly responses</li><li><strong>📡 Enhanced Socket.IO</strong>: Modern API for real-time applications</li><li><strong>📈 Request tracking</strong>: Automatic request IDs and execution timing</li><li><strong>🛡️ TypeScript support</strong>: Full type safety with comprehensive interfaces</li></ul><h2 id="🚀-quick-start" tabindex="-1">🚀 Quick Start <a class="header-anchor" href="#🚀-quick-start" aria-label="Permalink to &quot;🚀 Quick Start&quot;">​</a></h2><h3 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#9ECBFF;"> install</span><span style="color:#9ECBFF;"> @amitkandar/response-handler</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="express-setup-30-seconds" tabindex="-1">Express Setup (30 seconds) <a class="header-anchor" href="#express-setup-30-seconds" aria-label="Permalink to &quot;Express Setup (30 seconds)&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> express</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;express&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">quickSetup</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> app</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> express</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(express.</span><span style="color:#B392F0;">json</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 🎉 One-line setup with powerful configuration</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">middleware</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">errorHandler</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> quickSetup</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&#39;development&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// &#39;production&#39; for live apps</span></span>
<span class="line"><span style="color:#E1E4E8;">  logging: { enabled: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, logErrors: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  security: { sanitizeErrors: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(middleware);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// ✨ Modern, clean API - errors are auto-caught!</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/users&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> users</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> getUsersFromDB</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(users, </span><span style="color:#9ECBFF;">&#39;Users retrieved successfully&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/users&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">req.body.email) {</span></span>
<span class="line"><span style="color:#F97583;">    return</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">({ field: </span><span style="color:#9ECBFF;">&#39;email&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Email is required&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> user</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> createUser</span><span style="color:#E1E4E8;">(req.body);</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">created</span><span style="color:#E1E4E8;">(user);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(errorHandler); </span><span style="color:#6A737D;">// Must be last!</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">listen</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3000</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h3 id="socket-io-setup" tabindex="-1">Socket.IO Setup <a class="header-anchor" href="#socket-io-setup" aria-label="Permalink to &quot;Socket.IO Setup&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">quickSocketSetup</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">enhance</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">wrapper</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> quickSocketSetup</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">io.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;connection&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">  // Simple approach</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;get-user&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> response</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> enhance</span><span style="color:#E1E4E8;">(socket, </span><span style="color:#9ECBFF;">&#39;user-data&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">data.userId) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> response.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;User ID required&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> user</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> getUserById</span><span style="color:#E1E4E8;">(data.userId);</span></span>
<span class="line"><span style="color:#E1E4E8;">    response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(user);</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Auto error handling</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#9ECBFF;">    &#39;create-post&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    wrapper</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> post</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> createPost</span><span style="color:#E1E4E8;">(data);</span></span>
<span class="line"><span style="color:#E1E4E8;">      response.</span><span style="color:#B392F0;">created</span><span style="color:#E1E4E8;">(post);</span></span>
<span class="line"><span style="color:#6A737D;">      // All errors automatically caught and emitted!</span></span>
<span class="line"><span style="color:#E1E4E8;">    }),</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="📚-api-reference" tabindex="-1">📚 API Reference <a class="header-anchor" href="#📚-api-reference" aria-label="Permalink to &quot;📚 API Reference&quot;">​</a></h2><h3 id="express-response-methods" tabindex="-1">Express Response Methods <a class="header-anchor" href="#express-response-methods" aria-label="Permalink to &quot;Express Response Methods&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// Success responses</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(data, message); </span><span style="color:#6A737D;">// 200 OK</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">created</span><span style="color:#E1E4E8;">(data, message); </span><span style="color:#6A737D;">// 201 Created</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">accepted</span><span style="color:#E1E4E8;">(data, message); </span><span style="color:#6A737D;">// 202 Accepted</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">noContent</span><span style="color:#E1E4E8;">(message); </span><span style="color:#6A737D;">// 204 No Content</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Error responses</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">(error, message); </span><span style="color:#6A737D;">// 400 Bad Request</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">unauthorized</span><span style="color:#E1E4E8;">(error, message); </span><span style="color:#6A737D;">// 401 Unauthorized</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">forbidden</span><span style="color:#E1E4E8;">(error, message); </span><span style="color:#6A737D;">// 403 Forbidden</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">notFound</span><span style="color:#E1E4E8;">(error, message); </span><span style="color:#6A737D;">// 404 Not Found</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">conflict</span><span style="color:#E1E4E8;">(error, message); </span><span style="color:#6A737D;">// 409 Conflict</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">unprocessableEntity</span><span style="color:#E1E4E8;">(error, message); </span><span style="color:#6A737D;">// 422 Unprocessable Entity</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">tooManyRequests</span><span style="color:#E1E4E8;">(error, message); </span><span style="color:#6A737D;">// 429 Too Many Requests</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">internalServerError</span><span style="color:#E1E4E8;">(error, message); </span><span style="color:#6A737D;">// 500 Internal Server Error</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Generic &amp; Special responses</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">respond</span><span style="color:#E1E4E8;">(statusCode, data, message); </span><span style="color:#6A737D;">// Custom status code</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(error, statusCode); </span><span style="color:#6A737D;">// Auto-determine from error</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">paginate</span><span style="color:#E1E4E8;">(data, pagination, message); </span><span style="color:#6A737D;">// Paginated responses</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="socket-io-response-methods" tabindex="-1">Socket.IO Response Methods <a class="header-anchor" href="#socket-io-response-methods" aria-label="Permalink to &quot;Socket.IO Response Methods&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> response</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> enhance</span><span style="color:#E1E4E8;">(socket, </span><span style="color:#9ECBFF;">&#39;event-name&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(data, message); </span><span style="color:#6A737D;">// Success responses</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">created</span><span style="color:#E1E4E8;">(data, message);</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(error, code); </span><span style="color:#6A737D;">// Error responses</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">(error, message);</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">unauthorized</span><span style="color:#E1E4E8;">(error, message);</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">forbidden</span><span style="color:#E1E4E8;">(error, message);</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">notFound</span><span style="color:#E1E4E8;">(error, message);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Targeting</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">toRoom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;room-name&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(data); </span><span style="color:#6A737D;">// Broadcast to room</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">toSocket</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;socket-id&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(err); </span><span style="color:#6A737D;">// Send to specific socket</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="⚙️-configuration" tabindex="-1">⚙️ Configuration <a class="header-anchor" href="#⚙️-configuration" aria-label="Permalink to &quot;⚙️ Configuration&quot;">​</a></h2><h3 id="full-configuration-example" tabindex="-1">Full Configuration Example <a class="header-anchor" href="#full-configuration-example" aria-label="Permalink to &quot;Full Configuration Example&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> config</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&#39;development&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// or &#39;production&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  logging: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    enabled: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    level: </span><span style="color:#9ECBFF;">&#39;info&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// &#39;error&#39;, &#39;warn&#39;, &#39;info&#39;, &#39;debug&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    logErrors: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    logRequests: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    logResponses: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    includeStack: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    customLogger</span><span style="color:#E1E4E8;">: (</span><span style="color:#FFAB70;">level</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">message</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">meta</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">      // Use your preferred logger</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  responses: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    includeTimestamp: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    includeRequestId: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    includeExecutionTime: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    customFields: { version: </span><span style="color:#9ECBFF;">&#39;1.0.0&#39;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  security: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    sanitizeErrors: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    hideInternalErrors: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// true in production</span></span>
<span class="line"><span style="color:#E1E4E8;">    allowedErrorFields: [</span><span style="color:#9ECBFF;">&#39;message&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;type&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;code&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    corsHeaders: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  performance: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    enableCaching: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    cacheHeaders: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    etag: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    compression: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h2 id="🌟-advanced-features" tabindex="-1">🌟 Advanced Features <a class="header-anchor" href="#🌟-advanced-features" aria-label="Permalink to &quot;🌟 Advanced Features&quot;">​</a></h2><h3 id="environment-aware-responses" tabindex="-1">Environment-Aware Responses <a class="header-anchor" href="#environment-aware-responses" aria-label="Permalink to &quot;Environment-Aware Responses&quot;">​</a></h3><p><strong>Development Mode</strong> (Detailed errors):</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;success&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;message&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Database connection failed&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;error&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;DatabaseError&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;code&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;CONN_FAILED&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;details&quot;</span><span style="color:#E1E4E8;">: { </span><span style="color:#79B8FF;">&quot;host&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;localhost&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">&quot;port&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5432</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;stack&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Error: Database connection failed...&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;meta&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;requestId&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;req-123&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;timestamp&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2024-01-01T10:00:00Z&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;executionTime&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1250</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;environment&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;development&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>Production Mode</strong> (Sanitized):</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;success&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;message&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;An internal error occurred&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;error&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;InternalError&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;code&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;ERR_INTERNAL&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;meta&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;requestId&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;req-123&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;timestamp&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2024-01-01T10:00:00Z&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="pagination-helper" tabindex="-1">Pagination Helper <a class="header-anchor" href="#pagination-helper" aria-label="Permalink to &quot;Pagination Helper&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/posts&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">page</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> 1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">limit</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> 10</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> req.query;</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> posts</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> getPostsPaginated</span><span style="color:#E1E4E8;">(page, limit);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">paginate</span><span style="color:#E1E4E8;">(posts, {</span></span>
<span class="line"><span style="color:#E1E4E8;">    page: </span><span style="color:#B392F0;">parseInt</span><span style="color:#E1E4E8;">(page),</span></span>
<span class="line"><span style="color:#E1E4E8;">    limit: </span><span style="color:#B392F0;">parseInt</span><span style="color:#E1E4E8;">(limit),</span></span>
<span class="line"><span style="color:#E1E4E8;">    total: </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> getTotalPosts</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    totalPages: Math.</span><span style="color:#B392F0;">ceil</span><span style="color:#E1E4E8;">((</span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> getTotalPosts</span><span style="color:#E1E4E8;">()) </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> limit),</span></span>
<span class="line"><span style="color:#E1E4E8;">    hasNext: page </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> totalPages,</span></span>
<span class="line"><span style="color:#E1E4E8;">    hasPrev: page </span><span style="color:#F97583;">&gt;</span><span style="color:#79B8FF;"> 1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="socket-io-room-broadcasting" tabindex="-1">Socket.IO Room Broadcasting <a class="header-anchor" href="#socket-io-room-broadcasting" aria-label="Permalink to &quot;Socket.IO Room Broadcasting&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// Broadcast to room</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">toRoom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;room-123&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    message: </span><span style="color:#9ECBFF;">&#39;Hello everyone!&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    from: socket.id,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#9ECBFF;">  &#39;New message in room&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Send to specific socket</span></span>
<span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">toSocket</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;socket-456&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(error);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="📁-project-structure" tabindex="-1">📁 Project Structure <a class="header-anchor" href="#📁-project-structure" aria-label="Permalink to &quot;📁 Project Structure&quot;">​</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span>src/</span></span>
<span class="line"><span>├── types/index.ts              # TypeScript type definitions</span></span>
<span class="line"><span>├── core/</span></span>
<span class="line"><span>│   ├── logger.ts              # Comprehensive logging system</span></span>
<span class="line"><span>│   └── responseBuilder.ts     # Response building logic</span></span>
<span class="line"><span>├── middleware/</span></span>
<span class="line"><span>│   └── responseHandler.ts     # Main middleware implementation</span></span>
<span class="line"><span>├── socket/</span></span>
<span class="line"><span>│   └── enhancedSocket.ts      # Enhanced Socket.IO handlers</span></span>
<span class="line"><span>├── newIndex.ts                # Modern API exports</span></span>
<span class="line"><span>└── [legacy files...]          # Backward compatibility</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="🔄-migration-guide" tabindex="-1">🔄 Migration Guide <a class="header-anchor" href="#🔄-migration-guide" aria-label="Permalink to &quot;🔄 Migration Guide&quot;">​</a></h2><h3 id="from-legacy-api" tabindex="-1">From Legacy API <a class="header-anchor" href="#from-legacy-api" aria-label="Permalink to &quot;From Legacy API&quot;">​</a></h3><p><strong>Old:</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">sendSuccess</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">sendError</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/users&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> users</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> getUsers</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#B392F0;">    sendSuccess</span><span style="color:#E1E4E8;">(res, users, </span><span style="color:#9ECBFF;">&#39;Users retrieved&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="color:#B392F0;">    sendError</span><span style="color:#E1E4E8;">(res, error);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>New:</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">quickSetup</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">middleware</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">errorHandler</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> quickSetup</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(middleware);</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/users&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> users</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> getUsers</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// Errors auto-caught!</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(users, </span><span style="color:#9ECBFF;">&#39;Users retrieved&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(errorHandler);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="🧪-testing" tabindex="-1">🧪 Testing <a class="header-anchor" href="#🧪-testing" aria-label="Permalink to &quot;🧪 Testing&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># Run all tests</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#9ECBFF;"> test</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Run specific test types</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#9ECBFF;"> run</span><span style="color:#9ECBFF;"> test:unit</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#9ECBFF;"> run</span><span style="color:#9ECBFF;"> test:integration</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#9ECBFF;"> run</span><span style="color:#9ECBFF;"> test:e2e</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Watch mode</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#9ECBFF;"> run</span><span style="color:#9ECBFF;"> test:watch</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Coverage report</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#9ECBFF;"> run</span><span style="color:#9ECBFF;"> test:coverage</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="📖-documentation" tabindex="-1">📖 Documentation <a class="header-anchor" href="#📖-documentation" aria-label="Permalink to &quot;📖 Documentation&quot;">​</a></h2><ul><li><a href="./docs/API.html">Complete API Reference</a></li><li><a href="./docs/CONFIGURATION.html">Configuration Guide</a></li><li><a href="./docs/EXAMPLES.html">Examples</a></li><li><a href="./docs/MIGRATION.html">Migration Guide</a></li></ul><h2 id="🤝-contributing" tabindex="-1">🤝 Contributing <a class="header-anchor" href="#🤝-contributing" aria-label="Permalink to &quot;🤝 Contributing&quot;">​</a></h2><ol><li>Fork the repository</li><li>Create a feature branch</li><li>Write tests for your changes</li><li>Ensure all tests pass</li><li>Submit a pull request</li></ol><h2 id="📜-license" tabindex="-1">📜 License <a class="header-anchor" href="#📜-license" aria-label="Permalink to &quot;📜 License&quot;">​</a></h2><p>ISC © Amit Kandar</p><hr><p><strong>🚀 Ready to build better APIs? Get started in 30 seconds!</strong></p>`,47)]))}const b=n(e,[["render",o]]);export{u as __pageData,b as default};
