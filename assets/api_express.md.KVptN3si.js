import{_ as a,c as e,o as n,ag as r}from"./chunks/framework.S-Qvb3wi.js";const u=JSON.parse('{"title":"Express API Reference","description":"","frontmatter":{},"headers":[],"relativePath":"api/express.md","filePath":"api/express.md"}'),l={name:"api/express.md"};function p(o,s,t,c,i,d){return n(),e("div",null,s[0]||(s[0]=[r(`<h1 id="express-api-reference" tabindex="-1">Express API Reference <a class="header-anchor" href="#express-api-reference" aria-label="Permalink to &quot;Express API Reference&quot;">​</a></h1><p>Complete API reference for Express integration.</p><h2 id="quick-setup" tabindex="-1">Quick Setup <a class="header-anchor" href="#quick-setup" aria-label="Permalink to &quot;Quick Setup&quot;">​</a></h2><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { quickSetup } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">middleware</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">errorHandler</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> quickSetup</span><span style="color:#E1E4E8;">(config);</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(middleware);</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(errorHandler); </span><span style="color:#6A737D;">// Must be last</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="enhanced-response-methods" tabindex="-1">Enhanced Response Methods <a class="header-anchor" href="#enhanced-response-methods" aria-label="Permalink to &quot;Enhanced Response Methods&quot;">​</a></h2><p>All methods are available on the Express response object after applying middleware.</p><h3 id="success-responses" tabindex="-1">Success Responses <a class="header-anchor" href="#success-responses" aria-label="Permalink to &quot;Success Responses&quot;">​</a></h3><h4 id="res-ok-data-message" tabindex="-1"><code>res.ok(data, message)</code> <a class="header-anchor" href="#res-ok-data-message" aria-label="Permalink to &quot;\`res.ok(data, message)\`&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">({ users: [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">] }, </span><span style="color:#9ECBFF;">&#39;Users retrieved successfully&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Status: 200</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="res-created-data-message" tabindex="-1"><code>res.created(data, message)</code> <a class="header-anchor" href="#res-created-data-message" aria-label="Permalink to &quot;\`res.created(data, message)\`&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">created</span><span style="color:#E1E4E8;">({ id: </span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">, name: </span><span style="color:#9ECBFF;">&#39;John&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;User created&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Status: 201</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="res-accepted-data-message" tabindex="-1"><code>res.accepted(data, message)</code> <a class="header-anchor" href="#res-accepted-data-message" aria-label="Permalink to &quot;\`res.accepted(data, message)\`&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">accepted</span><span style="color:#E1E4E8;">({ jobId: </span><span style="color:#79B8FF;">456</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Job queued for processing&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Status: 202</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="res-nocontent-message" tabindex="-1"><code>res.noContent(message)</code> <a class="header-anchor" href="#res-nocontent-message" aria-label="Permalink to &quot;\`res.noContent(message)\`&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">noContent</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;User deleted successfully&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Status: 204</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="error-responses" tabindex="-1">Error Responses <a class="header-anchor" href="#error-responses" aria-label="Permalink to &quot;Error Responses&quot;">​</a></h3><h4 id="res-badrequest-error-message" tabindex="-1"><code>res.badRequest(error, message)</code> <a class="header-anchor" href="#res-badrequest-error-message" aria-label="Permalink to &quot;\`res.badRequest(error, message)\`&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">({ field: </span><span style="color:#9ECBFF;">&#39;email&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Invalid email format&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Status: 400</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="res-unauthorized-error-message" tabindex="-1"><code>res.unauthorized(error, message)</code> <a class="header-anchor" href="#res-unauthorized-error-message" aria-label="Permalink to &quot;\`res.unauthorized(error, message)\`&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">unauthorized</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Authentication required&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Status: 401</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="res-forbidden-error-message" tabindex="-1"><code>res.forbidden(error, message)</code> <a class="header-anchor" href="#res-forbidden-error-message" aria-label="Permalink to &quot;\`res.forbidden(error, message)\`&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">forbidden</span><span style="color:#E1E4E8;">({ role: </span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Admin access required&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Status: 403</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="res-notfound-error-message" tabindex="-1"><code>res.notFound(error, message)</code> <a class="header-anchor" href="#res-notfound-error-message" aria-label="Permalink to &quot;\`res.notFound(error, message)\`&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">notFound</span><span style="color:#E1E4E8;">({ id: </span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;User not found&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Status: 404</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="res-conflict-error-message" tabindex="-1"><code>res.conflict(error, message)</code> <a class="header-anchor" href="#res-conflict-error-message" aria-label="Permalink to &quot;\`res.conflict(error, message)\`&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">conflict</span><span style="color:#E1E4E8;">({ email: </span><span style="color:#9ECBFF;">&#39;john@example.com&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Email already exists&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Status: 409</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="res-unprocessableentity-error-message" tabindex="-1"><code>res.unprocessableEntity(error, message)</code> <a class="header-anchor" href="#res-unprocessableentity-error-message" aria-label="Permalink to &quot;\`res.unprocessableEntity(error, message)\`&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">unprocessableEntity</span><span style="color:#E1E4E8;">({ field: </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Age must be a number&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Status: 422</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="res-toomanyrequests-error-message" tabindex="-1"><code>res.tooManyRequests(error, message)</code> <a class="header-anchor" href="#res-toomanyrequests-error-message" aria-label="Permalink to &quot;\`res.tooManyRequests(error, message)\`&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">tooManyRequests</span><span style="color:#E1E4E8;">({ limit: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Rate limit exceeded&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Status: 429</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="res-internalservererror-error-message" tabindex="-1"><code>res.internalServerError(error, message)</code> <a class="header-anchor" href="#res-internalservererror-error-message" aria-label="Permalink to &quot;\`res.internalServerError(error, message)\`&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">internalServerError</span><span style="color:#E1E4E8;">(error, </span><span style="color:#9ECBFF;">&#39;Database connection failed&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Status: 500</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="generic-methods" tabindex="-1">Generic Methods <a class="header-anchor" href="#generic-methods" aria-label="Permalink to &quot;Generic Methods&quot;">​</a></h3><h4 id="res-respond-statuscode-data-message" tabindex="-1"><code>res.respond(statusCode, data, message)</code> <a class="header-anchor" href="#res-respond-statuscode-data-message" aria-label="Permalink to &quot;\`res.respond(statusCode, data, message)\`&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">respond</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">418</span><span style="color:#E1E4E8;">, { teapot: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&quot;I&#39;m a teapot&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="res-error-error-statuscode" tabindex="-1"><code>res.error(error, statusCode)</code> <a class="header-anchor" href="#res-error-error-statuscode" aria-label="Permalink to &quot;\`res.error(error, statusCode)\`&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Something went wrong&#39;</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="res-paginate-data-pagination-message" tabindex="-1"><code>res.paginate(data, pagination, message)</code> <a class="header-anchor" href="#res-paginate-data-pagination-message" aria-label="Permalink to &quot;\`res.paginate(data, pagination, message)\`&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">paginate</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  users,</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    page: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    limit: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    total: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    totalPages: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#9ECBFF;">  &#39;Users retrieved&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="enhanced-request-properties" tabindex="-1">Enhanced Request Properties <a class="header-anchor" href="#enhanced-request-properties" aria-label="Permalink to &quot;Enhanced Request Properties&quot;">​</a></h2><p>The middleware adds these properties to the request object:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> EnhancedRequest</span><span style="color:#F97583;"> extends</span><span style="color:#B392F0;"> Request</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#FFAB70;">  requestId</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Unique request identifier</span></span>
<span class="line"><span style="color:#FFAB70;">  startTime</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> number</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Request start timestamp</span></span>
<span class="line"><span style="color:#FFAB70;">  context</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Request-specific context</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="response-format" tabindex="-1">Response Format <a class="header-anchor" href="#response-format" aria-label="Permalink to &quot;Response Format&quot;">​</a></h2><p>All responses follow this consistent format:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> ApiResponse</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#FFAB70;">  success</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  data</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// For successful responses</span></span>
<span class="line"><span style="color:#FFAB70;">  message</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Human-readable message</span></span>
<span class="line"><span style="color:#FFAB70;">  error</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> ErrorInfo</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// For error responses</span></span>
<span class="line"><span style="color:#FFAB70;">  meta</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> ResponseMeta</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Metadata (request ID, timing, etc.)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="error-handling" tabindex="-1">Error Handling <a class="header-anchor" href="#error-handling" aria-label="Permalink to &quot;Error Handling&quot;">​</a></h2><p>The error handler automatically catches and formats errors:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">next</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  throw</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Something went wrong&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">  // Automatically becomes formatted error response</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="file-downloads" tabindex="-1">File Downloads <a class="header-anchor" href="#file-downloads" aria-label="Permalink to &quot;File Downloads&quot;">​</a></h2><p>Enhanced file download methods:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">downloadFile</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/path/to/file.pdf&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;document.pdf&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="middleware-options" tabindex="-1">Middleware Options <a class="header-anchor" href="#middleware-options" aria-label="Permalink to &quot;Middleware Options&quot;">​</a></h2><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">middleware</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> quickSetup</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#6A737D;">  // Adds request ID to response headers</span></span>
<span class="line"><span style="color:#E1E4E8;">  responses: { includeRequestId: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Enable CORS headers</span></span>
<span class="line"><span style="color:#E1E4E8;">  security: { corsHeaders: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Custom error field filtering</span></span>
<span class="line"><span style="color:#E1E4E8;">  security: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    allowedErrorFields: [</span><span style="color:#9ECBFF;">&#39;message&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;type&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;code&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,53)]))}const y=a(l,[["render",p]]);export{u as __pageData,y as default};
