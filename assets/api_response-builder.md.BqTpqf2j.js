import{_ as a,c as n,o as e,ag as l}from"./chunks/framework.S-Qvb3wi.js";const u=JSON.parse('{"title":"Response Builder API Reference","description":"","frontmatter":{},"headers":[],"relativePath":"api/response-builder.md","filePath":"api/response-builder.md"}'),p={name:"api/response-builder.md"};function r(o,s,t,c,i,d){return e(),n("div",null,s[0]||(s[0]=[l(`<h1 id="response-builder-api-reference" tabindex="-1">Response Builder API Reference <a class="header-anchor" href="#response-builder-api-reference" aria-label="Permalink to &quot;Response Builder API Reference&quot;">​</a></h1><p>The ResponseBuilder class provides the core response building functionality.</p><h2 id="responsebuilder-class" tabindex="-1">ResponseBuilder Class <a class="header-anchor" href="#responsebuilder-class" aria-label="Permalink to &quot;ResponseBuilder Class&quot;">​</a></h2><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ResponseBuilder } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> builder</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> ResponseBuilder</span><span style="color:#E1E4E8;">(config, logger, req, res);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="constructor-parameters" tabindex="-1">Constructor Parameters <a class="header-anchor" href="#constructor-parameters" aria-label="Permalink to &quot;Constructor Parameters&quot;">​</a></h2><ul><li><code>config</code> - ResponseHandlerConfig object</li><li><code>logger</code> - Logger instance</li><li><code>req</code> - Express request object</li><li><code>res</code> - Express response object</li></ul><h2 id="success-methods" tabindex="-1">Success Methods <a class="header-anchor" href="#success-methods" aria-label="Permalink to &quot;Success Methods&quot;">​</a></h2><h3 id="ok-data-message" tabindex="-1"><code>ok(data, message)</code> <a class="header-anchor" href="#ok-data-message" aria-label="Permalink to &quot;\`ok(data, message)\`&quot;">​</a></h3><p>Creates a 200 OK response:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">({ users: [</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">] }, </span><span style="color:#9ECBFF;">&#39;Users retrieved successfully&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Returns: { success: true, data: {...}, message: &#39;...&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="created-data-message" tabindex="-1"><code>created(data, message)</code> <a class="header-anchor" href="#created-data-message" aria-label="Permalink to &quot;\`created(data, message)\`&quot;">​</a></h3><p>Creates a 201 Created response:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">created</span><span style="color:#E1E4E8;">(newUser, </span><span style="color:#9ECBFF;">&#39;User created successfully&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Returns: { success: true, data: {...}, message: &#39;...&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="accepted-data-message" tabindex="-1"><code>accepted(data, message)</code> <a class="header-anchor" href="#accepted-data-message" aria-label="Permalink to &quot;\`accepted(data, message)\`&quot;">​</a></h3><p>Creates a 202 Accepted response:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">accepted</span><span style="color:#E1E4E8;">({ jobId: </span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Job queued for processing&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Returns: { success: true, data: {...}, message: &#39;...&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="nocontent-message" tabindex="-1"><code>noContent(message)</code> <a class="header-anchor" href="#nocontent-message" aria-label="Permalink to &quot;\`noContent(message)\`&quot;">​</a></h3><p>Creates a 204 No Content response:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">noContent</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;User deleted successfully&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Returns: { success: true, message: &#39;...&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="error-methods" tabindex="-1">Error Methods <a class="header-anchor" href="#error-methods" aria-label="Permalink to &quot;Error Methods&quot;">​</a></h2><h3 id="badrequest-error-message" tabindex="-1"><code>badRequest(error, message)</code> <a class="header-anchor" href="#badrequest-error-message" aria-label="Permalink to &quot;\`badRequest(error, message)\`&quot;">​</a></h3><p>Creates a 400 Bad Request response:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">({ field: </span><span style="color:#9ECBFF;">&#39;email&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Invalid email format&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Returns: { success: false, error: {...}, message: &#39;...&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="unauthorized-error-message" tabindex="-1"><code>unauthorized(error, message)</code> <a class="header-anchor" href="#unauthorized-error-message" aria-label="Permalink to &quot;\`unauthorized(error, message)\`&quot;">​</a></h3><p>Creates a 401 Unauthorized response:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">unauthorized</span><span style="color:#E1E4E8;">({ reason: </span><span style="color:#9ECBFF;">&#39;invalid_token&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Authentication required&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Returns: { success: false, error: {...}, message: &#39;...&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="forbidden-error-message" tabindex="-1"><code>forbidden(error, message)</code> <a class="header-anchor" href="#forbidden-error-message" aria-label="Permalink to &quot;\`forbidden(error, message)\`&quot;">​</a></h3><p>Creates a 403 Forbidden response:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">forbidden</span><span style="color:#E1E4E8;">({ role: </span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Admin access required&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Returns: { success: false, error: {...}, message: &#39;...&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="notfound-error-message" tabindex="-1"><code>notFound(error, message)</code> <a class="header-anchor" href="#notfound-error-message" aria-label="Permalink to &quot;\`notFound(error, message)\`&quot;">​</a></h3><p>Creates a 404 Not Found response:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">notFound</span><span style="color:#E1E4E8;">({ id: </span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;User not found&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Returns: { success: false, error: {...}, message: &#39;...&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="conflict-error-message" tabindex="-1"><code>conflict(error, message)</code> <a class="header-anchor" href="#conflict-error-message" aria-label="Permalink to &quot;\`conflict(error, message)\`&quot;">​</a></h3><p>Creates a 409 Conflict response:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">conflict</span><span style="color:#E1E4E8;">({ email: </span><span style="color:#9ECBFF;">&#39;john@example.com&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Email already exists&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Returns: { success: false, error: {...}, message: &#39;...&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="unprocessableentity-error-message" tabindex="-1"><code>unprocessableEntity(error, message)</code> <a class="header-anchor" href="#unprocessableentity-error-message" aria-label="Permalink to &quot;\`unprocessableEntity(error, message)\`&quot;">​</a></h3><p>Creates a 422 Unprocessable Entity response:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">unprocessableEntity</span><span style="color:#E1E4E8;">({ field: </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Age must be a number&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Returns: { success: false, error: {...}, message: &#39;...&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="toomanyrequests-error-message" tabindex="-1"><code>tooManyRequests(error, message)</code> <a class="header-anchor" href="#toomanyrequests-error-message" aria-label="Permalink to &quot;\`tooManyRequests(error, message)\`&quot;">​</a></h3><p>Creates a 429 Too Many Requests response:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">tooManyRequests</span><span style="color:#E1E4E8;">({ limit: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Rate limit exceeded&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Returns: { success: false, error: {...}, message: &#39;...&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="internalservererror-error-message" tabindex="-1"><code>internalServerError(error, message)</code> <a class="header-anchor" href="#internalservererror-error-message" aria-label="Permalink to &quot;\`internalServerError(error, message)\`&quot;">​</a></h3><p>Creates a 500 Internal Server Error response:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">internalServerError</span><span style="color:#E1E4E8;">(error, </span><span style="color:#9ECBFF;">&#39;Database connection failed&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Returns: { success: false, error: {...}, message: &#39;...&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="generic-methods" tabindex="-1">Generic Methods <a class="header-anchor" href="#generic-methods" aria-label="Permalink to &quot;Generic Methods&quot;">​</a></h2><h3 id="respond-statuscode-data-message" tabindex="-1"><code>respond(statusCode, data, message)</code> <a class="header-anchor" href="#respond-statuscode-data-message" aria-label="Permalink to &quot;\`respond(statusCode, data, message)\`&quot;">​</a></h3><p>Creates a custom response with any status code:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">respond</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">418</span><span style="color:#E1E4E8;">, { teapot: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&quot;I&#39;m a teapot&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Returns custom response with status 418</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="error-error-statuscode" tabindex="-1"><code>error(error, statusCode)</code> <a class="header-anchor" href="#error-error-statuscode" aria-label="Permalink to &quot;\`error(error, statusCode)\`&quot;">​</a></h3><p>Creates an error response with automatic status detection:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> error</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Something went wrong&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">error.statusCode </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> 422</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(error);</span></span>
<span class="line"><span style="color:#6A737D;">// Automatically uses status 422 from error object</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="paginate-data-pagination-message" tabindex="-1"><code>paginate(data, pagination, message)</code> <a class="header-anchor" href="#paginate-data-pagination-message" aria-label="Permalink to &quot;\`paginate(data, pagination, message)\`&quot;">​</a></h3><p>Creates a paginated response:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> pagination</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  page: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  limit: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  total: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  totalPages: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  hasNext: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  hasPrev: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">paginate</span><span style="color:#E1E4E8;">(users, pagination, </span><span style="color:#9ECBFF;">&#39;Users retrieved&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Returns: { success: true, data: [...], meta: { pagination: {...} } }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="response-building-process" tabindex="-1">Response Building Process <a class="header-anchor" href="#response-building-process" aria-label="Permalink to &quot;Response Building Process&quot;">​</a></h2><h3 id="_1-data-processing" tabindex="-1">1. Data Processing <a class="header-anchor" href="#_1-data-processing" aria-label="Permalink to &quot;1. Data Processing&quot;">​</a></h3><p>The ResponseBuilder processes input data and applies transformations:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// Input</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> userData</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> { id: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, name: </span><span style="color:#9ECBFF;">&#39;John&#39;</span><span style="color:#E1E4E8;">, password: </span><span style="color:#9ECBFF;">&#39;secret&#39;</span><span style="color:#E1E4E8;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Processing (removes sensitive fields, applies formatting)</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> processedData</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> builder.</span><span style="color:#B392F0;">processData</span><span style="color:#E1E4E8;">(userData);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_2-error-sanitization" tabindex="-1">2. Error Sanitization <a class="header-anchor" href="#_2-error-sanitization" aria-label="Permalink to &quot;2. Error Sanitization&quot;">​</a></h3><p>Errors are sanitized based on environment and security settings:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// Development mode - full error details</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#B392F0;">  error</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#B392F0;">    message</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;Database connection failed&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;DatabaseError&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    code</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;CONN_FAILED&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    stack</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;...&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    details</span><span style="color:#E1E4E8;">: {</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Production mode - sanitized errors</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#B392F0;">  error</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#B392F0;">    message</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;An internal error occurred&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;Error&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    code</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;INTERNAL_ERROR&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="_3-metadata-generation" tabindex="-1">3. Metadata Generation <a class="header-anchor" href="#_3-metadata-generation" aria-label="Permalink to &quot;3. Metadata Generation&quot;">​</a></h3><p>Metadata is automatically added based on configuration:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#B392F0;">  success</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">  data</span><span style="color:#E1E4E8;">: {</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#B392F0;">  message</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;...&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">  meta</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#B392F0;">    requestId</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;req-123-456&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    timestamp</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;2023-01-01T12:00:00.000Z&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    executionTime</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">150</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    environment</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;development&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    version</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;1.0.0&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="private-methods" tabindex="-1">Private Methods <a class="header-anchor" href="#private-methods" aria-label="Permalink to &quot;Private Methods&quot;">​</a></h2><p>The ResponseBuilder uses several private methods internally:</p><h3 id="buildresponse-success-data-message-error" tabindex="-1"><code>buildResponse(success, data, message, error)</code> <a class="header-anchor" href="#buildresponse-success-data-message-error" aria-label="Permalink to &quot;\`buildResponse(success, data, message, error)\`&quot;">​</a></h3><p>Core method that builds the response object:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">private </span><span style="color:#B392F0;">buildResponse</span><span style="color:#E1E4E8;">(success: boolean, data</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> any, message</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> string, error</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> any): ApiResponse</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="sanitizeerror-error" tabindex="-1"><code>sanitizeError(error)</code> <a class="header-anchor" href="#sanitizeerror-error" aria-label="Permalink to &quot;\`sanitizeError(error)\`&quot;">​</a></h3><p>Sanitizes error objects based on security settings:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">private </span><span style="color:#B392F0;">sanitizeError</span><span style="color:#E1E4E8;">(error: any): ErrorInfo</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="generatemeta" tabindex="-1"><code>generateMeta()</code> <a class="header-anchor" href="#generatemeta" aria-label="Permalink to &quot;\`generateMeta()\`&quot;">​</a></h3><p>Generates metadata for responses:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">private </span><span style="color:#B392F0;">generateMeta</span><span style="color:#E1E4E8;">(): ResponseMeta</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="logresponse-statuscode-responsedata-error" tabindex="-1"><code>logResponse(statusCode, responseData, error?)</code> <a class="header-anchor" href="#logresponse-statuscode-responsedata-error" aria-label="Permalink to &quot;\`logResponse(statusCode, responseData, error?)\`&quot;">​</a></h3><p>Logs response information:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">private </span><span style="color:#B392F0;">logResponse</span><span style="color:#E1E4E8;">(statusCode: number, responseData: any, error</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> any): </span><span style="color:#F97583;">void</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="sendresponse-statuscode-data-message-error" tabindex="-1"><code>sendResponse(statusCode, data?, message?, error?)</code> <a class="header-anchor" href="#sendresponse-statuscode-data-message-error" aria-label="Permalink to &quot;\`sendResponse(statusCode, data?, message?, error?)\`&quot;">​</a></h3><p>Sends the final response with headers and logging:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">private </span><span style="color:#B392F0;">sendResponse</span><span style="color:#E1E4E8;">(statusCode: number, data</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> any, message</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> string, error</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> any): Response</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="configuration-impact" tabindex="-1">Configuration Impact <a class="header-anchor" href="#configuration-impact" aria-label="Permalink to &quot;Configuration Impact&quot;">​</a></h2><p>Different configuration options affect the ResponseBuilder behavior:</p><h3 id="mode-configuration" tabindex="-1">Mode Configuration <a class="header-anchor" href="#mode-configuration" aria-label="Permalink to &quot;Mode Configuration&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// Development mode</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#B392F0;">  mode</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;development&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">  // Includes full error details, stack traces, debug info</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Production mode</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#B392F0;">  mode</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;production&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">  // Sanitizes errors, hides internal details</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="security-configuration" tabindex="-1">Security Configuration <a class="header-anchor" href="#security-configuration" aria-label="Permalink to &quot;Security Configuration&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#B392F0;">  security</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#B392F0;">    sanitizeErrors</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,           </span><span style="color:#6A737D;">// Remove sensitive error data</span></span>
<span class="line"><span style="color:#B392F0;">    hideInternalErrors</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,       </span><span style="color:#6A737D;">// Hide internal error details</span></span>
<span class="line"><span style="color:#B392F0;">    allowedErrorFields</span><span style="color:#E1E4E8;">: [           </span><span style="color:#6A737D;">// Which error fields to include</span></span>
<span class="line"><span style="color:#9ECBFF;">      &#39;message&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;type&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;code&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="response-configuration" tabindex="-1">Response Configuration <a class="header-anchor" href="#response-configuration" aria-label="Permalink to &quot;Response Configuration&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#B392F0;">  responses</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#B392F0;">    includeRequestId</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,         </span><span style="color:#6A737D;">// Add request ID to responses</span></span>
<span class="line"><span style="color:#B392F0;">    includeTimestamp</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,         </span><span style="color:#6A737D;">// Add timestamp to responses</span></span>
<span class="line"><span style="color:#B392F0;">    includeExecutionTime</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,     </span><span style="color:#6A737D;">// Add execution time tracking</span></span>
<span class="line"><span style="color:#B392F0;">    customFields</span><span style="color:#E1E4E8;">: {                 </span><span style="color:#6A737D;">// Add custom metadata fields</span></span>
<span class="line"><span style="color:#B392F0;">      version</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;1.0.0&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">      environment</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;production&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="error-types" tabindex="-1">Error Types <a class="header-anchor" href="#error-types" aria-label="Permalink to &quot;Error Types&quot;">​</a></h2><p>The ResponseBuilder handles different error types:</p><h3 id="standard-errors" tabindex="-1">Standard Errors <a class="header-anchor" href="#standard-errors" aria-label="Permalink to &quot;Standard Errors&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> error</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Something went wrong&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(error);</span></span>
<span class="line"><span style="color:#6A737D;">// Uses default status 500</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="custom-errors-with-status" tabindex="-1">Custom Errors with Status <a class="header-anchor" href="#custom-errors-with-status" aria-label="Permalink to &quot;Custom Errors with Status&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> error</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Validation failed&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">error.statusCode </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> 422</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(error);</span></span>
<span class="line"><span style="color:#6A737D;">// Uses status 422 from error</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="validation-errors" tabindex="-1">Validation Errors <a class="header-anchor" href="#validation-errors" aria-label="Permalink to &quot;Validation Errors&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> error</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  message: </span><span style="color:#9ECBFF;">&#39;Validation failed&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  field: </span><span style="color:#9ECBFF;">&#39;email&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  value: </span><span style="color:#9ECBFF;">&#39;invalid-email&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">(error, </span><span style="color:#9ECBFF;">&#39;Invalid input&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="headers-and-additional-processing" tabindex="-1">Headers and Additional Processing <a class="header-anchor" href="#headers-and-additional-processing" aria-label="Permalink to &quot;Headers and Additional Processing&quot;">​</a></h2><p>The ResponseBuilder automatically handles:</p><h3 id="security-headers" tabindex="-1">Security Headers <a class="header-anchor" href="#security-headers" aria-label="Permalink to &quot;Security Headers&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// When security.corsHeaders is enabled</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;X-Content-Type-Options&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;nosniff&#39;</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;X-Frame-Options&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;DENY&#39;</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;X-XSS-Protection&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;1; mode=block&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="request-id-headers" tabindex="-1">Request ID Headers <a class="header-anchor" href="#request-id-headers" aria-label="Permalink to &quot;Request ID Headers&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// When responses.includeRequestId is enabled</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;X-Request-ID&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;req-123-456-789&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="cache-headers" tabindex="-1">Cache Headers <a class="header-anchor" href="#cache-headers" aria-label="Permalink to &quot;Cache Headers&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// When performance.enableCaching is enabled</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;Cache-Control&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;public, max-age=300&#39;</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;ETag&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;&quot;abc123&quot;&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="usage-in-middleware" tabindex="-1">Usage in Middleware <a class="header-anchor" href="#usage-in-middleware" aria-label="Permalink to &quot;Usage in Middleware&quot;">​</a></h2><p>The ResponseBuilder is used internally by the response handler middleware:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// In middleware</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> builder</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> ResponseBuilder</span><span style="color:#E1E4E8;">(config, logger, req, res);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Enhance response object</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">ok</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">message</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> builder.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(data, message);</span></span>
<span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">error</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">error</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">statusCode</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> builder.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(error, statusCode);</span></span>
<span class="line"><span style="color:#6A737D;">// ... other methods</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="testing-responsebuilder" tabindex="-1">Testing ResponseBuilder <a class="header-anchor" href="#testing-responsebuilder" aria-label="Permalink to &quot;Testing ResponseBuilder&quot;">​</a></h2><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ResponseBuilder } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">describe</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ResponseBuilder&#39;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  let</span><span style="color:#E1E4E8;"> builder, mockReq, mockRes, mockLogger, config;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  beforeEach</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    mockReq </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { requestId: </span><span style="color:#9ECBFF;">&#39;test-123&#39;</span><span style="color:#E1E4E8;">, startTime: Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">() };</span></span>
<span class="line"><span style="color:#E1E4E8;">    mockRes </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { status: jest.</span><span style="color:#B392F0;">fn</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">mockReturnThis</span><span style="color:#E1E4E8;">(), json: jest.</span><span style="color:#B392F0;">fn</span><span style="color:#E1E4E8;">() };</span></span>
<span class="line"><span style="color:#E1E4E8;">    mockLogger </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { logResponse: jest.</span><span style="color:#B392F0;">fn</span><span style="color:#E1E4E8;">(), logEvent: jest.</span><span style="color:#B392F0;">fn</span><span style="color:#E1E4E8;">() };</span></span>
<span class="line"><span style="color:#E1E4E8;">    config </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { mode: </span><span style="color:#9ECBFF;">&#39;test&#39;</span><span style="color:#E1E4E8;">, responses: {}, security: {} };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    builder </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> ResponseBuilder</span><span style="color:#E1E4E8;">(config, mockLogger, mockReq, mockRes);</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;should create ok response&#39;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    builder.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">({ test: </span><span style="color:#9ECBFF;">&#39;data&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Success&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">    expect</span><span style="color:#E1E4E8;">(mockRes.status).</span><span style="color:#B392F0;">toHaveBeenCalledWith</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#B392F0;">    expect</span><span style="color:#E1E4E8;">(mockRes.json).</span><span style="color:#B392F0;">toHaveBeenCalledWith</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">      success: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      data: { test: </span><span style="color:#9ECBFF;">&#39;data&#39;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">      message: </span><span style="color:#9ECBFF;">&#39;Success&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>`,110)]))}const b=a(p,[["render",r]]);export{u as __pageData,b as default};
