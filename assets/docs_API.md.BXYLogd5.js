import{_ as a,c as n,o as e,ag as p}from"./chunks/framework.S-Qvb3wi.js";const y=JSON.parse('{"title":"API Reference","description":"","frontmatter":{},"headers":[],"relativePath":"docs/API.md","filePath":"docs/API.md"}'),l={name:"docs/API.md"};function o(r,s,t,c,i,E){return e(),n("div",null,s[0]||(s[0]=[p(`<h1 id="api-reference" tabindex="-1">API Reference <a class="header-anchor" href="#api-reference" aria-label="Permalink to &quot;API Reference&quot;">​</a></h1><p>Complete API documentation for the Enhanced Response Handler.</p><h2 id="table-of-contents" tabindex="-1">Table of Contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of Contents&quot;">​</a></h2><ul><li><a href="#quick-setup-functions">Quick Setup Functions</a></li><li><a href="#express-response-methods">Express Response Methods</a></li><li><a href="#socketio-response-methods">Socket.IO Response Methods</a></li><li><a href="#configuration-options">Configuration Options</a></li><li><a href="#typescript-types">TypeScript Types</a></li></ul><h2 id="quick-setup-functions" tabindex="-1">Quick Setup Functions <a class="header-anchor" href="#quick-setup-functions" aria-label="Permalink to &quot;Quick Setup Functions&quot;">​</a></h2><h3 id="quicksetup-config" tabindex="-1"><code>quickSetup(config?)</code> <a class="header-anchor" href="#quicksetup-config" aria-label="Permalink to &quot;\`quickSetup(config?)\`&quot;">​</a></h3><p>Sets up Express middleware with response handler capabilities.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { quickSetup } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">middleware</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">errorHandler</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">logger</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> quickSetup</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&#39;development&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  logging: { enabled: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>Parameters:</strong></p><ul><li><code>config</code> (optional): <code>ResponseHandlerConfig</code> - Configuration object</li></ul><p><strong>Returns:</strong></p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#B392F0;">  middleware</span><span style="color:#E1E4E8;">: Function,     </span><span style="color:#6A737D;">// Express middleware function</span></span>
<span class="line"><span style="color:#B392F0;">  errorHandler</span><span style="color:#E1E4E8;">: Function,   </span><span style="color:#6A737D;">// Express error handler</span></span>
<span class="line"><span style="color:#B392F0;">  logger</span><span style="color:#E1E4E8;">: Logger,          </span><span style="color:#6A737D;">// Logger instance</span></span>
<span class="line"><span style="color:#B392F0;">  updateConfig</span><span style="color:#E1E4E8;">: Function   </span><span style="color:#6A737D;">// Function to update configuration</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="quicksocketsetup-config" tabindex="-1"><code>quickSocketSetup(config?)</code> <a class="header-anchor" href="#quicksocketsetup-config" aria-label="Permalink to &quot;\`quickSocketSetup(config?)\`&quot;">​</a></h3><p>Sets up Socket.IO response handler capabilities.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { quickSocketSetup } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">enhance</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">wrapper</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">setupServer</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">logger</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> quickSocketSetup</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&#39;development&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>Parameters:</strong></p><ul><li><code>config</code> (optional): <code>ResponseHandlerConfig</code> - Configuration object</li></ul><p><strong>Returns:</strong></p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#B392F0;">  enhance</span><span style="color:#E1E4E8;">: Function,       </span><span style="color:#6A737D;">// Socket response enhancer</span></span>
<span class="line"><span style="color:#B392F0;">  wrapper</span><span style="color:#E1E4E8;">: Function,       </span><span style="color:#6A737D;">// Error wrapper for handlers</span></span>
<span class="line"><span style="color:#B392F0;">  setupServer</span><span style="color:#E1E4E8;">: Function,   </span><span style="color:#6A737D;">// Server setup utility</span></span>
<span class="line"><span style="color:#B392F0;">  logger</span><span style="color:#E1E4E8;">: Logger          </span><span style="color:#6A737D;">// Logger instance</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="express-response-methods" tabindex="-1">Express Response Methods <a class="header-anchor" href="#express-response-methods" aria-label="Permalink to &quot;Express Response Methods&quot;">​</a></h2><p>After applying the middleware, the Express response object is enhanced with these methods:</p><h3 id="success-responses" tabindex="-1">Success Responses <a class="header-anchor" href="#success-responses" aria-label="Permalink to &quot;Success Responses&quot;">​</a></h3><h4 id="res-ok-data-message" tabindex="-1"><code>res.ok(data?, message?)</code> <a class="header-anchor" href="#res-ok-data-message" aria-label="Permalink to &quot;\`res.ok(data?, message?)\`&quot;">​</a></h4><p>Sends a 200 OK response.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">({ users: [</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">] }, </span><span style="color:#9ECBFF;">&#39;Users retrieved successfully&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="res-created-data-message" tabindex="-1"><code>res.created(data?, message?)</code> <a class="header-anchor" href="#res-created-data-message" aria-label="Permalink to &quot;\`res.created(data?, message?)\`&quot;">​</a></h4><p>Sends a 201 Created response.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">created</span><span style="color:#E1E4E8;">(newUser, </span><span style="color:#9ECBFF;">&#39;User created successfully&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="res-accepted-data-message" tabindex="-1"><code>res.accepted(data?, message?)</code> <a class="header-anchor" href="#res-accepted-data-message" aria-label="Permalink to &quot;\`res.accepted(data?, message?)\`&quot;">​</a></h4><p>Sends a 202 Accepted response.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">accepted</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Request accepted for processing&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="res-nocontent-message" tabindex="-1"><code>res.noContent(message?)</code> <a class="header-anchor" href="#res-nocontent-message" aria-label="Permalink to &quot;\`res.noContent(message?)\`&quot;">​</a></h4><p>Sends a 204 No Content response.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">noContent</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;User deleted successfully&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="error-responses" tabindex="-1">Error Responses <a class="header-anchor" href="#error-responses" aria-label="Permalink to &quot;Error Responses&quot;">​</a></h3><h4 id="res-badrequest-error-message" tabindex="-1"><code>res.badRequest(error?, message?)</code> <a class="header-anchor" href="#res-badrequest-error-message" aria-label="Permalink to &quot;\`res.badRequest(error?, message?)\`&quot;">​</a></h4><p>Sends a 400 Bad Request response.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">({ field: </span><span style="color:#9ECBFF;">&#39;email&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Invalid email format&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="res-unauthorized-error-message" tabindex="-1"><code>res.unauthorized(error?, message?)</code> <a class="header-anchor" href="#res-unauthorized-error-message" aria-label="Permalink to &quot;\`res.unauthorized(error?, message?)\`&quot;">​</a></h4><p>Sends a 401 Unauthorized response.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">unauthorized</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Authentication required&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="res-forbidden-error-message" tabindex="-1"><code>res.forbidden(error?, message?)</code> <a class="header-anchor" href="#res-forbidden-error-message" aria-label="Permalink to &quot;\`res.forbidden(error?, message?)\`&quot;">​</a></h4><p>Sends a 403 Forbidden response.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">forbidden</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Access denied&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="res-notfound-error-message" tabindex="-1"><code>res.notFound(error?, message?)</code> <a class="header-anchor" href="#res-notfound-error-message" aria-label="Permalink to &quot;\`res.notFound(error?, message?)\`&quot;">​</a></h4><p>Sends a 404 Not Found response.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">notFound</span><span style="color:#E1E4E8;">({ resource: </span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;">, id: </span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;User not found&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="res-conflict-error-message" tabindex="-1"><code>res.conflict(error?, message?)</code> <a class="header-anchor" href="#res-conflict-error-message" aria-label="Permalink to &quot;\`res.conflict(error?, message?)\`&quot;">​</a></h4><p>Sends a 409 Conflict response.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">conflict</span><span style="color:#E1E4E8;">({ email: </span><span style="color:#9ECBFF;">&#39;john@example.com&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;User already exists&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="res-unprocessableentity-error-message" tabindex="-1"><code>res.unprocessableEntity(error?, message?)</code> <a class="header-anchor" href="#res-unprocessableentity-error-message" aria-label="Permalink to &quot;\`res.unprocessableEntity(error?, message?)\`&quot;">​</a></h4><p>Sends a 422 Unprocessable Entity response.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">unprocessableEntity</span><span style="color:#E1E4E8;">(validationErrors, </span><span style="color:#9ECBFF;">&#39;Validation failed&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="res-toomanyrequests-error-message" tabindex="-1"><code>res.tooManyRequests(error?, message?)</code> <a class="header-anchor" href="#res-toomanyrequests-error-message" aria-label="Permalink to &quot;\`res.tooManyRequests(error?, message?)\`&quot;">​</a></h4><p>Sends a 429 Too Many Requests response.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">tooManyRequests</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Rate limit exceeded&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="res-internalservererror-error-message" tabindex="-1"><code>res.internalServerError(error?, message?)</code> <a class="header-anchor" href="#res-internalservererror-error-message" aria-label="Permalink to &quot;\`res.internalServerError(error?, message?)\`&quot;">​</a></h4><p>Sends a 500 Internal Server Error response.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">internalServerError</span><span style="color:#E1E4E8;">(error, </span><span style="color:#9ECBFF;">&#39;Something went wrong&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="generic-responses" tabindex="-1">Generic Responses <a class="header-anchor" href="#generic-responses" aria-label="Permalink to &quot;Generic Responses&quot;">​</a></h3><h4 id="res-respond-statuscode-data-message" tabindex="-1"><code>res.respond(statusCode, data?, message?)</code> <a class="header-anchor" href="#res-respond-statuscode-data-message" aria-label="Permalink to &quot;\`res.respond(statusCode, data?, message?)\`&quot;">​</a></h4><p>Sends a response with custom status code.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">respond</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">418</span><span style="color:#E1E4E8;">, { teapot: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&quot;I&#39;m a teapot&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="res-error-error-statuscode" tabindex="-1"><code>res.error(error, statusCode?)</code> <a class="header-anchor" href="#res-error-error-statuscode" aria-label="Permalink to &quot;\`res.error(error, statusCode?)\`&quot;">​</a></h4><p>Sends an error response with auto-detected or specified status code.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Custom error&#39;</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">422</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="res-paginate-data-pagination-message" tabindex="-1"><code>res.paginate(data, pagination, message?)</code> <a class="header-anchor" href="#res-paginate-data-pagination-message" aria-label="Permalink to &quot;\`res.paginate(data, pagination, message?)\`&quot;">​</a></h4><p>Sends a paginated response.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">paginate</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  posts,</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    page: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    limit: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    total: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    totalPages: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    hasNext: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    hasPrev: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#9ECBFF;">  &#39;Posts retrieved&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="file-responses" tabindex="-1">File Responses <a class="header-anchor" href="#file-responses" aria-label="Permalink to &quot;File Responses&quot;">​</a></h3><h4 id="res-downloadfile-filepath-filename" tabindex="-1"><code>res.downloadFile(filePath, filename?)</code> <a class="header-anchor" href="#res-downloadfile-filepath-filename" aria-label="Permalink to &quot;\`res.downloadFile(filePath, filename?)\`&quot;">​</a></h4><p>Initiates file download with logging.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">downloadFile</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/path/to/file.pdf&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;document.pdf&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="res-streamresponse-stream-contenttype" tabindex="-1"><code>res.streamResponse(stream, contentType?)</code> <a class="header-anchor" href="#res-streamresponse-stream-contenttype" aria-label="Permalink to &quot;\`res.streamResponse(stream, contentType?)\`&quot;">​</a></h4><p>Streams data with optional content type.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">res.</span><span style="color:#B392F0;">streamResponse</span><span style="color:#E1E4E8;">(fileStream, </span><span style="color:#9ECBFF;">&#39;application/pdf&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="socket-io-response-methods" tabindex="-1">Socket.IO Response Methods <a class="header-anchor" href="#socket-io-response-methods" aria-label="Permalink to &quot;Socket.IO Response Methods&quot;">​</a></h2><h3 id="basic-usage" tabindex="-1">Basic Usage <a class="header-anchor" href="#basic-usage" aria-label="Permalink to &quot;Basic Usage&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> response</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> enhance</span><span style="color:#E1E4E8;">(socket, </span><span style="color:#9ECBFF;">&#39;event-name&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="success-methods" tabindex="-1">Success Methods <a class="header-anchor" href="#success-methods" aria-label="Permalink to &quot;Success Methods&quot;">​</a></h3><h4 id="response-ok-data-message" tabindex="-1"><code>response.ok(data?, message?)</code> <a class="header-anchor" href="#response-ok-data-message" aria-label="Permalink to &quot;\`response.ok(data?, message?)\`&quot;">​</a></h4><p>Emits a success response.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(userData, </span><span style="color:#9ECBFF;">&#39;User data retrieved&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="response-created-data-message" tabindex="-1"><code>response.created(data?, message?)</code> <a class="header-anchor" href="#response-created-data-message" aria-label="Permalink to &quot;\`response.created(data?, message?)\`&quot;">​</a></h4><p>Emits a creation success response.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">created</span><span style="color:#E1E4E8;">(newPost, </span><span style="color:#9ECBFF;">&#39;Post created successfully&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="error-methods" tabindex="-1">Error Methods <a class="header-anchor" href="#error-methods" aria-label="Permalink to &quot;Error Methods&quot;">​</a></h3><h4 id="response-error-error-code" tabindex="-1"><code>response.error(error, code?)</code> <a class="header-anchor" href="#response-error-error-code" aria-label="Permalink to &quot;\`response.error(error, code?)\`&quot;">​</a></h4><p>Emits an error response.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Something went wrong&#39;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&#39;ERR_001&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="response-badrequest-error-message" tabindex="-1"><code>response.badRequest(error?, message?)</code> <a class="header-anchor" href="#response-badrequest-error-message" aria-label="Permalink to &quot;\`response.badRequest(error?, message?)\`&quot;">​</a></h4><p>Emits a bad request error.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">({ field: </span><span style="color:#9ECBFF;">&#39;userId&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;User ID is required&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="response-unauthorized-error-message" tabindex="-1"><code>response.unauthorized(error?, message?)</code> <a class="header-anchor" href="#response-unauthorized-error-message" aria-label="Permalink to &quot;\`response.unauthorized(error?, message?)\`&quot;">​</a></h4><p>Emits an unauthorized error.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">unauthorized</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Invalid token&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="response-forbidden-error-message" tabindex="-1"><code>response.forbidden(error?, message?)</code> <a class="header-anchor" href="#response-forbidden-error-message" aria-label="Permalink to &quot;\`response.forbidden(error?, message?)\`&quot;">​</a></h4><p>Emits a forbidden error.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">forbidden</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Access denied&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="response-notfound-error-message" tabindex="-1"><code>response.notFound(error?, message?)</code> <a class="header-anchor" href="#response-notfound-error-message" aria-label="Permalink to &quot;\`response.notFound(error?, message?)\`&quot;">​</a></h4><p>Emits a not found error.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">notFound</span><span style="color:#E1E4E8;">({ userId: </span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;User not found&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="targeting-methods" tabindex="-1">Targeting Methods <a class="header-anchor" href="#targeting-methods" aria-label="Permalink to &quot;Targeting Methods&quot;">​</a></h3><h4 id="response-toroom-roomid" tabindex="-1"><code>response.toRoom(roomId)</code> <a class="header-anchor" href="#response-toroom-roomid" aria-label="Permalink to &quot;\`response.toRoom(roomId)\`&quot;">​</a></h4><p>Targets a specific room.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">toRoom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;room-123&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(message, </span><span style="color:#9ECBFF;">&#39;New message&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="response-tosocket-socketid" tabindex="-1"><code>response.toSocket(socketId)</code> <a class="header-anchor" href="#response-tosocket-socketid" aria-label="Permalink to &quot;\`response.toSocket(socketId)\`&quot;">​</a></h4><p>Targets a specific socket.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">response.</span><span style="color:#B392F0;">toSocket</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;socket-456&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(error);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="error-wrapper" tabindex="-1">Error Wrapper <a class="header-anchor" href="#error-wrapper" aria-label="Permalink to &quot;Error Wrapper&quot;">​</a></h3><h4 id="wrapper-handler" tabindex="-1"><code>wrapper(handler)</code> <a class="header-anchor" href="#wrapper-handler" aria-label="Permalink to &quot;\`wrapper(handler)\`&quot;">​</a></h4><p>Wraps socket handlers with automatic error handling.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#9ECBFF;">  &#39;event&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">  wrapper</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">    // Handler code - errors are automatically caught</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> result</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> someAsyncOperation</span><span style="color:#E1E4E8;">(data);</span></span>
<span class="line"><span style="color:#E1E4E8;">    response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(result);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }),</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="configuration-options" tabindex="-1">Configuration Options <a class="header-anchor" href="#configuration-options" aria-label="Permalink to &quot;Configuration Options&quot;">​</a></h2><h3 id="responsehandlerconfig" tabindex="-1"><code>ResponseHandlerConfig</code> <a class="header-anchor" href="#responsehandlerconfig" aria-label="Permalink to &quot;\`ResponseHandlerConfig\`&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> ResponseHandlerConfig</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#FFAB70;">  mode</span><span style="color:#F97583;">?:</span><span style="color:#9ECBFF;"> &#39;development&#39;</span><span style="color:#F97583;"> |</span><span style="color:#9ECBFF;"> &#39;production&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  logging</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> LoggingConfig</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  responses</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> ResponseConfig</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  security</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> SecurityConfig</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  performance</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> PerformanceConfig</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="loggingconfig" tabindex="-1"><code>LoggingConfig</code> <a class="header-anchor" href="#loggingconfig" aria-label="Permalink to &quot;\`LoggingConfig\`&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> LoggingConfig</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#FFAB70;">  enabled</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Enable/disable logging</span></span>
<span class="line"><span style="color:#FFAB70;">  level</span><span style="color:#F97583;">?:</span><span style="color:#9ECBFF;"> &#39;error&#39;</span><span style="color:#F97583;"> |</span><span style="color:#9ECBFF;"> &#39;warn&#39;</span><span style="color:#F97583;"> |</span><span style="color:#9ECBFF;"> &#39;info&#39;</span><span style="color:#F97583;"> |</span><span style="color:#9ECBFF;"> &#39;debug&#39;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Log level</span></span>
<span class="line"><span style="color:#FFAB70;">  logErrors</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Log error events</span></span>
<span class="line"><span style="color:#FFAB70;">  logRequests</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Log incoming requests</span></span>
<span class="line"><span style="color:#FFAB70;">  logResponses</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Log outgoing responses</span></span>
<span class="line"><span style="color:#FFAB70;">  includeStack</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Include stack traces</span></span>
<span class="line"><span style="color:#FFAB70;">  includeRequest</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Include request details</span></span>
<span class="line"><span style="color:#B392F0;">  customLogger</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">level</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">message</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">meta</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#79B8FF;"> void</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Custom logger</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="responseconfig" tabindex="-1"><code>ResponseConfig</code> <a class="header-anchor" href="#responseconfig" aria-label="Permalink to &quot;\`ResponseConfig\`&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> ResponseConfig</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#FFAB70;">  includeTimestamp</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Include timestamp in responses</span></span>
<span class="line"><span style="color:#FFAB70;">  includeRequestId</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Include request ID in responses</span></span>
<span class="line"><span style="color:#FFAB70;">  includeExecutionTime</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Include execution time</span></span>
<span class="line"><span style="color:#FFAB70;">  customFields</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> Record</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">&gt;; </span><span style="color:#6A737D;">// Custom fields in meta</span></span>
<span class="line"><span style="color:#FFAB70;">  pagination</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Enable pagination helpers</span></span>
<span class="line"><span style="color:#FFAB70;">  compression</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Enable response compression</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="securityconfig" tabindex="-1"><code>SecurityConfig</code> <a class="header-anchor" href="#securityconfig" aria-label="Permalink to &quot;\`SecurityConfig\`&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> SecurityConfig</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#FFAB70;">  sanitizeErrors</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Sanitize error messages</span></span>
<span class="line"><span style="color:#FFAB70;">  hideInternalErrors</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Hide internal error details</span></span>
<span class="line"><span style="color:#FFAB70;">  allowedErrorFields</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">[]; </span><span style="color:#6A737D;">// Allowed error fields</span></span>
<span class="line"><span style="color:#FFAB70;">  rateLimiting</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Enable rate limiting</span></span>
<span class="line"><span style="color:#FFAB70;">  corsHeaders</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Set CORS security headers</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="performanceconfig" tabindex="-1"><code>PerformanceConfig</code> <a class="header-anchor" href="#performanceconfig" aria-label="Permalink to &quot;\`PerformanceConfig\`&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> PerformanceConfig</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#FFAB70;">  enableCaching</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Enable response caching</span></span>
<span class="line"><span style="color:#FFAB70;">  cacheHeaders</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Set cache control headers</span></span>
<span class="line"><span style="color:#FFAB70;">  etag</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Enable ETag headers</span></span>
<span class="line"><span style="color:#FFAB70;">  compression</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Enable response compression</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="typescript-types" tabindex="-1">TypeScript Types <a class="header-anchor" href="#typescript-types" aria-label="Permalink to &quot;TypeScript Types&quot;">​</a></h2><h3 id="request-enhancement" tabindex="-1">Request Enhancement <a class="header-anchor" href="#request-enhancement" aria-label="Permalink to &quot;Request Enhancement&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> EnhancedRequest</span><span style="color:#F97583;"> extends</span><span style="color:#B392F0;"> Request</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#FFAB70;">  requestId</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Auto-generated request ID</span></span>
<span class="line"><span style="color:#FFAB70;">  startTime</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> number</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Request start timestamp</span></span>
<span class="line"><span style="color:#FFAB70;">  context</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> Record</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">&gt;; </span><span style="color:#6A737D;">// Request context object</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="response-enhancement" tabindex="-1">Response Enhancement <a class="header-anchor" href="#response-enhancement" aria-label="Permalink to &quot;Response Enhancement&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> EnhancedResponse</span><span style="color:#F97583;"> extends</span><span style="color:#B392F0;"> Response</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">  // Success methods</span></span>
<span class="line"><span style="color:#B392F0;">  ok</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">data</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">message</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> Response</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">  created</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">data</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">message</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> Response</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">  // ... other methods</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="socket-response" tabindex="-1">Socket Response <a class="header-anchor" href="#socket-response" aria-label="Permalink to &quot;Socket Response&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> SocketResponse</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  ok</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">data</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">message</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#79B8FF;"> void</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">  created</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">data</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">message</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#79B8FF;"> void</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">  error</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">error</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">code</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#79B8FF;"> void</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">  toRoom</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">room</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> SocketResponse</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">  toSocket</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">socketId</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> SocketResponse</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="response-format" tabindex="-1">Response Format <a class="header-anchor" href="#response-format" aria-label="Permalink to &quot;Response Format&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> ApiResponse</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">T</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#FFAB70;">  success</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  data</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> T</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  message</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  error</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> ErrorInfo</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  meta</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> ResponseMeta</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="error-information" tabindex="-1">Error Information <a class="header-anchor" href="#error-information" aria-label="Permalink to &quot;Error Information&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> ErrorInfo</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#FFAB70;">  message</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  type</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  code</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> number</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  details</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  stack</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  timestamp</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="response-metadata" tabindex="-1">Response Metadata <a class="header-anchor" href="#response-metadata" aria-label="Permalink to &quot;Response Metadata&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> ResponseMeta</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#FFAB70;">  requestId</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  timestamp</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  executionTime</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> number</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  pagination</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> PaginationInfo</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  version</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  environment</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="pagination-information" tabindex="-1">Pagination Information <a class="header-anchor" href="#pagination-information" aria-label="Permalink to &quot;Pagination Information&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> PaginationInfo</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#FFAB70;">  page</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> number</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  limit</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> number</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  total</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> number</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  totalPages</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> number</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  hasNext</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">  hasPrev</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="response-examples" tabindex="-1">Response Examples <a class="header-anchor" href="#response-examples" aria-label="Permalink to &quot;Response Examples&quot;">​</a></h2><h3 id="success-response-development-mode" tabindex="-1">Success Response (Development Mode) <a class="header-anchor" href="#success-response-development-mode" aria-label="Permalink to &quot;Success Response (Development Mode)&quot;">​</a></h3><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;success&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;data&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;id&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;name&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;John Doe&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;email&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;john@example.com&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;message&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;User retrieved successfully&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;meta&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;requestId&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;req-abc123&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;timestamp&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2024-01-01T10:00:00.000Z&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;executionTime&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">150</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;environment&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;development&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;version&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1.0.0&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="error-response-development-mode" tabindex="-1">Error Response (Development Mode) <a class="header-anchor" href="#error-response-development-mode" aria-label="Permalink to &quot;Error Response (Development Mode)&quot;">​</a></h3><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;success&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;message&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Validation failed&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;error&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;message&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Validation failed&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;ValidationError&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;code&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;VALIDATION_FAILED&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;details&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;email&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Invalid email format&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;password&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Password too short&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;stack&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Error: Validation failed</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">    at...&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;timestamp&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2024-01-01T10:00:00.000Z&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;meta&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;requestId&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;req-def456&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;timestamp&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2024-01-01T10:00:00.000Z&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;executionTime&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">75</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="error-response-production-mode" tabindex="-1">Error Response (Production Mode) <a class="header-anchor" href="#error-response-production-mode" aria-label="Permalink to &quot;Error Response (Production Mode)&quot;">​</a></h3><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;success&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;message&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;An internal error occurred&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;error&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;InternalError&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;code&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;ERR_INTERNAL&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;meta&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;requestId&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;req-ghi789&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;timestamp&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2024-01-01T10:00:00.000Z&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="paginated-response" tabindex="-1">Paginated Response <a class="header-anchor" href="#paginated-response" aria-label="Permalink to &quot;Paginated Response&quot;">​</a></h3><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;success&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;data&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">&quot;id&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">&quot;title&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Post 1&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">&quot;id&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">&quot;title&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Post 2&quot;</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;message&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Posts retrieved successfully&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;meta&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;requestId&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;req-jkl012&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;timestamp&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2024-01-01T10:00:00.000Z&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;executionTime&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">95</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;pagination&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;page&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;limit&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;total&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;totalPages&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;hasNext&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;hasPrev&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="logger-api" tabindex="-1">Logger API <a class="header-anchor" href="#logger-api" aria-label="Permalink to &quot;Logger API&quot;">​</a></h2><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">logger.</span><span style="color:#B392F0;">info</span><span style="color:#E1E4E8;">(message: string, meta</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> any): </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">logger.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(message: string, error</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> any, meta</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> any): </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">logger.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(message: string, meta</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> any): </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">logger.</span><span style="color:#B392F0;">debug</span><span style="color:#E1E4E8;">(message: string, meta</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> any): </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">logger.</span><span style="color:#B392F0;">logRequest</span><span style="color:#E1E4E8;">(req: any): </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">logger.</span><span style="color:#B392F0;">logResponse</span><span style="color:#E1E4E8;">(req: any, res: any, responseData: any, executionTime</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> number): </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">logger.</span><span style="color:#B392F0;">logEvent</span><span style="color:#E1E4E8;">(event: ResponseEvent): </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">logger.</span><span style="color:#B392F0;">updateConfig</span><span style="color:#E1E4E8;">(newConfig: Partial</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">LoggingConfig</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">): </span><span style="color:#F97583;">void</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">logger</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> quickSetup</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">logger.</span><span style="color:#B392F0;">info</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Server started&#39;</span><span style="color:#E1E4E8;">, { port: </span><span style="color:#79B8FF;">3000</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"><span style="color:#E1E4E8;">logger.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Database connection failed&#39;</span><span style="color:#E1E4E8;">, error, { retryAttempt: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> });</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>This API reference provides comprehensive documentation for all available methods and configuration options in the Enhanced Response Handler.</p>`,154)]))}const u=a(l,[["render",o]]);export{y as __pageData,u as default};
