import{_ as n,c as a,o as l,ag as p}from"./chunks/framework.S-Qvb3wi.js";const b=JSON.parse('{"title":"Socket.IO Examples","description":"","frontmatter":{},"headers":[],"relativePath":"examples/socket.md","filePath":"examples/socket.md"}'),e={name:"examples/socket.md"};function o(r,s,c,E,t,y){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="socket-io-examples" tabindex="-1">Socket.IO Examples <a class="header-anchor" href="#socket-io-examples" aria-label="Permalink to &quot;Socket.IO Examples&quot;">​</a></h1><p>Practical examples for using Response Handler with Socket.IO.</p><h2 id="basic-socket-io-server" tabindex="-1">Basic Socket.IO Server <a class="header-anchor" href="#basic-socket-io-server" aria-label="Permalink to &quot;Basic Socket.IO Server&quot;">​</a></h2><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createServer } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;http&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Server } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;socket.io&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { quickSocketSetup } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> httpServer</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> createServer</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> io</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Server</span><span style="color:#E1E4E8;">(httpServer, {</span></span>
<span class="line"><span style="color:#E1E4E8;">  cors: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    origin: </span><span style="color:#9ECBFF;">&#39;http://localhost:3000&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    methods: [</span><span style="color:#9ECBFF;">&#39;GET&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;POST&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">enhance</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">wrapper</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> quickSocketSetup</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: process.env.</span><span style="color:#79B8FF;">NODE_ENV</span><span style="color:#F97583;"> ===</span><span style="color:#9ECBFF;"> &#39;production&#39;</span><span style="color:#F97583;"> ?</span><span style="color:#9ECBFF;"> &#39;production&#39;</span><span style="color:#F97583;"> :</span><span style="color:#9ECBFF;"> &#39;development&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  logging: { enabled: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, logErrors: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">io.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;connection&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Client connected:&#39;</span><span style="color:#E1E4E8;">, socket.id);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Basic event handling</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;get-status&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> response</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> enhance</span><span style="color:#E1E4E8;">(socket, </span><span style="color:#9ECBFF;">&#39;status-response&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">({ status: </span><span style="color:#9ECBFF;">&#39;online&#39;</span><span style="color:#E1E4E8;">, timestamp: Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">() }, </span><span style="color:#9ECBFF;">&#39;Status retrieved&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">httpServer.</span><span style="color:#B392F0;">listen</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3001</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Socket.IO server running on port 3001&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="real-time-chat-application" tabindex="-1">Real-time Chat Application <a class="header-anchor" href="#real-time-chat-application" aria-label="Permalink to &quot;Real-time Chat Application&quot;">​</a></h2><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Server } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;socket.io&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { quickSocketSetup } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> io</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Server</span><span style="color:#E1E4E8;">(httpServer);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">enhance</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">wrapper</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> quickSocketSetup</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&#39;development&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  logging: { enabled: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Store connected users</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> connectedUsers</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Map</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">io.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;connection&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">  // User authentication</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#9ECBFF;">    &#39;authenticate&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    wrapper</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">token</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">username</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">token </span><span style="color:#F97583;">||</span><span style="color:#F97583;"> !</span><span style="color:#E1E4E8;">username) {</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#E1E4E8;"> response.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">          { missingFields: [</span><span style="color:#9ECBFF;">&#39;token&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;username&#39;</span><span style="color:#E1E4E8;">] },</span></span>
<span class="line"><span style="color:#9ECBFF;">          &#39;Authentication credentials required&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        );</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">      try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">        const</span><span style="color:#79B8FF;"> user</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> validateToken</span><span style="color:#E1E4E8;">(token);</span></span>
<span class="line"><span style="color:#E1E4E8;">        socket.userId </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> user.id;</span></span>
<span class="line"><span style="color:#E1E4E8;">        socket.username </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> username;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        connectedUsers.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(socket.id, {</span></span>
<span class="line"><span style="color:#E1E4E8;">          id: user.id,</span></span>
<span class="line"><span style="color:#E1E4E8;">          username,</span></span>
<span class="line"><span style="color:#E1E4E8;">          joinedAt: </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Date</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">toISOString</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">          {</span></span>
<span class="line"><span style="color:#E1E4E8;">            id: user.id,</span></span>
<span class="line"><span style="color:#E1E4E8;">            username,</span></span>
<span class="line"><span style="color:#E1E4E8;">            connectedUsers: Array.</span><span style="color:#B392F0;">from</span><span style="color:#E1E4E8;">(connectedUsers.</span><span style="color:#B392F0;">values</span><span style="color:#E1E4E8;">()),</span></span>
<span class="line"><span style="color:#E1E4E8;">          },</span></span>
<span class="line"><span style="color:#9ECBFF;">          &#39;Authentication successful&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">        // Notify others</span></span>
<span class="line"><span style="color:#E1E4E8;">        socket.broadcast.</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;user-joined&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">          id: user.id,</span></span>
<span class="line"><span style="color:#E1E4E8;">          username,</span></span>
<span class="line"><span style="color:#E1E4E8;">          timestamp: </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Date</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">toISOString</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">      } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        response.</span><span style="color:#B392F0;">unauthorized</span><span style="color:#E1E4E8;">(error, </span><span style="color:#9ECBFF;">&#39;Invalid authentication token&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }),</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Join chat room</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#9ECBFF;">    &#39;join-room&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    wrapper</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">roomId</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">socket.userId) {</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#E1E4E8;"> response.</span><span style="color:#B392F0;">unauthorized</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Please authenticate first&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">roomId) {</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#E1E4E8;"> response.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">({ field: </span><span style="color:#9ECBFF;">&#39;roomId&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Room ID required&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">      await</span><span style="color:#E1E4E8;"> socket.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(roomId);</span></span>
<span class="line"><span style="color:#E1E4E8;">      socket.currentRoom </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> roomId;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">({ roomId }, </span><span style="color:#9ECBFF;">\`Joined room \${</span><span style="color:#E1E4E8;">roomId</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Notify room members</span></span>
<span class="line"><span style="color:#E1E4E8;">      response.</span><span style="color:#B392F0;">toRoom</span><span style="color:#E1E4E8;">(roomId).</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;user-joined-room&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">        userId: socket.userId,</span></span>
<span class="line"><span style="color:#E1E4E8;">        username: socket.username,</span></span>
<span class="line"><span style="color:#E1E4E8;">        roomId,</span></span>
<span class="line"><span style="color:#E1E4E8;">        timestamp: </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Date</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">toISOString</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">      });</span></span>
<span class="line"><span style="color:#E1E4E8;">    }),</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Send message</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#9ECBFF;">    &#39;send-message&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    wrapper</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">message</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">roomId</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">socket.userId) {</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#E1E4E8;"> response.</span><span style="color:#B392F0;">unauthorized</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Please authenticate first&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">message </span><span style="color:#F97583;">||</span><span style="color:#F97583;"> !</span><span style="color:#E1E4E8;">roomId) {</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#E1E4E8;"> response.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">          { missingFields: [</span><span style="color:#9ECBFF;">&#39;message&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;roomId&#39;</span><span style="color:#E1E4E8;">] },</span></span>
<span class="line"><span style="color:#9ECBFF;">          &#39;Message and room ID required&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        );</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> messageObj</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        id: </span><span style="color:#B392F0;">generateMessageId</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">        message,</span></span>
<span class="line"><span style="color:#E1E4E8;">        userId: socket.userId,</span></span>
<span class="line"><span style="color:#E1E4E8;">        username: socket.username,</span></span>
<span class="line"><span style="color:#E1E4E8;">        roomId,</span></span>
<span class="line"><span style="color:#E1E4E8;">        timestamp: </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Date</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">toISOString</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">      };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Save to database (optional)</span></span>
<span class="line"><span style="color:#F97583;">      await</span><span style="color:#B392F0;"> saveMessage</span><span style="color:#E1E4E8;">(messageObj);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Broadcast to room</span></span>
<span class="line"><span style="color:#E1E4E8;">      response.</span><span style="color:#B392F0;">toRoom</span><span style="color:#E1E4E8;">(roomId).</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;new-message&#39;</span><span style="color:#E1E4E8;">, messageObj);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Confirm to sender</span></span>
<span class="line"><span style="color:#E1E4E8;">      response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">({ messageId: messageObj.id }, </span><span style="color:#9ECBFF;">&#39;Message sent&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }),</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Private message</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#9ECBFF;">    &#39;send-private-message&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    wrapper</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">message</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">targetUserId</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> targetSocket</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> findSocketByUserId</span><span style="color:#E1E4E8;">(targetUserId);</span></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">targetSocket) {</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#E1E4E8;"> response.</span><span style="color:#B392F0;">notFound</span><span style="color:#E1E4E8;">({ userId: targetUserId }, </span><span style="color:#9ECBFF;">&#39;User not online&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> privateMessage</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        id: </span><span style="color:#B392F0;">generateMessageId</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">        message,</span></span>
<span class="line"><span style="color:#E1E4E8;">        from: {</span></span>
<span class="line"><span style="color:#E1E4E8;">          id: socket.userId,</span></span>
<span class="line"><span style="color:#E1E4E8;">          username: socket.username,</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">        timestamp: </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Date</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">toISOString</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">      };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Send to target user</span></span>
<span class="line"><span style="color:#E1E4E8;">      response.</span><span style="color:#B392F0;">toSocket</span><span style="color:#E1E4E8;">(targetSocket.id).</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;private-message&#39;</span><span style="color:#E1E4E8;">, privateMessage);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Confirm to sender</span></span>
<span class="line"><span style="color:#E1E4E8;">      response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">({ messageId: privateMessage.id }, </span><span style="color:#9ECBFF;">&#39;Private message sent&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }),</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Disconnect handling</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;disconnect&#39;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    connectedUsers.</span><span style="color:#B392F0;">delete</span><span style="color:#E1E4E8;">(socket.id);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;"> (socket.userId </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> socket.username) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      socket.broadcast.</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;user-left&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">        id: socket.userId,</span></span>
<span class="line"><span style="color:#E1E4E8;">        username: socket.username,</span></span>
<span class="line"><span style="color:#E1E4E8;">        timestamp: </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Date</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">toISOString</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">      });</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Helper functions</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> generateMessageId</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#9ECBFF;"> \`msg-\${</span><span style="color:#E1E4E8;">Date</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">now</span><span style="color:#9ECBFF;">()</span><span style="color:#9ECBFF;">}-\${</span><span style="color:#E1E4E8;">Math</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">random</span><span style="color:#9ECBFF;">().</span><span style="color:#B392F0;">toString</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">36</span><span style="color:#9ECBFF;">).</span><span style="color:#B392F0;">substr</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">, </span><span style="color:#79B8FF;">9</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> findSocketByUserId</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">userId</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">  for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">socketId</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">socketObj</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> io.sockets.sockets) {</span></span>
<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;"> (socketObj.userId </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> userId) {</span></span>
<span class="line"><span style="color:#F97583;">      return</span><span style="color:#E1E4E8;"> socketObj;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#79B8FF;"> null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br></div></div><h2 id="gaming-server-example" tabindex="-1">Gaming Server Example <a class="header-anchor" href="#gaming-server-example" aria-label="Permalink to &quot;Gaming Server Example&quot;">​</a></h2><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Server } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;socket.io&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { quickSocketSetup } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> io</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Server</span><span style="color:#E1E4E8;">(httpServer);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">enhance</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">wrapper</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> quickSocketSetup</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&#39;development&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  logging: { enabled: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Game state</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> games</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Map</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> waitingPlayers</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">io.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;connection&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">  // Join game queue</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#9ECBFF;">    &#39;join-queue&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    wrapper</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">playerName</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">gameType</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">playerName) {</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#E1E4E8;"> response.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">({ field: </span><span style="color:#9ECBFF;">&#39;playerName&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Player name required&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> player</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        id: socket.id,</span></span>
<span class="line"><span style="color:#E1E4E8;">        name: playerName,</span></span>
<span class="line"><span style="color:#E1E4E8;">        gameType: gameType </span><span style="color:#F97583;">||</span><span style="color:#9ECBFF;"> &#39;standard&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        joinedAt: Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">      };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      waitingPlayers.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(player);</span></span>
<span class="line"><span style="color:#E1E4E8;">      socket.playerInfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> player;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">({ position: waitingPlayers.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&#39;Added to queue&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Try to match players</span></span>
<span class="line"><span style="color:#B392F0;">      tryMatchPlayers</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }),</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Make game move</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#9ECBFF;">    &#39;make-move&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    wrapper</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">gameId</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">move</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">socket.gameId) {</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#E1E4E8;"> response.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Not in a game&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> game</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> games.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(gameId);</span></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">game) {</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#E1E4E8;"> response.</span><span style="color:#B392F0;">notFound</span><span style="color:#E1E4E8;">({ gameId }, </span><span style="color:#9ECBFF;">&#39;Game not found&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Validate move</span></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#B392F0;">isValidMove</span><span style="color:#E1E4E8;">(game, socket.id, move)) {</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#E1E4E8;"> response.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">({ move }, </span><span style="color:#9ECBFF;">&#39;Invalid move&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Apply move</span></span>
<span class="line"><span style="color:#B392F0;">      applyMove</span><span style="color:#E1E4E8;">(game, socket.id, move);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Check game state</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> gameState</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> checkGameState</span><span style="color:#E1E4E8;">(game);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Broadcast game update</span></span>
<span class="line"><span style="color:#E1E4E8;">      response.</span><span style="color:#B392F0;">toRoom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`game-\${</span><span style="color:#E1E4E8;">gameId</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;game-update&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">        gameId,</span></span>
<span class="line"><span style="color:#E1E4E8;">        move,</span></span>
<span class="line"><span style="color:#E1E4E8;">        playerId: socket.id,</span></span>
<span class="line"><span style="color:#E1E4E8;">        gameState: game.state,</span></span>
<span class="line"><span style="color:#E1E4E8;">        timestamp: Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">      });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">({ gameState }, </span><span style="color:#9ECBFF;">&#39;Move accepted&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Handle game end</span></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (gameState.finished) {</span></span>
<span class="line"><span style="color:#B392F0;">        endGame</span><span style="color:#E1E4E8;">(game);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }),</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Leave game</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#9ECBFF;">    &#39;leave-game&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    wrapper</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (socket.gameId) {</span></span>
<span class="line"><span style="color:#F97583;">        const</span><span style="color:#79B8FF;"> game</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> games.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(socket.gameId);</span></span>
<span class="line"><span style="color:#F97583;">        if</span><span style="color:#E1E4E8;"> (game) {</span></span>
<span class="line"><span style="color:#6A737D;">          // Notify other players</span></span>
<span class="line"><span style="color:#E1E4E8;">          response.</span><span style="color:#B392F0;">toRoom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`game-\${</span><span style="color:#E1E4E8;">socket</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">gameId</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;player-left&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">            playerId: socket.id,</span></span>
<span class="line"><span style="color:#E1E4E8;">            timestamp: Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">          });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">          // End game</span></span>
<span class="line"><span style="color:#B392F0;">          endGame</span><span style="color:#E1E4E8;">(game);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        socket.</span><span style="color:#B392F0;">leave</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`game-\${</span><span style="color:#E1E4E8;">socket</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">gameId</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        socket.gameId </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Left game&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }),</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;disconnect&#39;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">    // Remove from waiting queue</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> index</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> waitingPlayers.</span><span style="color:#B392F0;">findIndex</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">p</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> p.id </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> socket.id);</span></span>
<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;"> (index </span><span style="color:#F97583;">!==</span><span style="color:#F97583;"> -</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      waitingPlayers.</span><span style="color:#B392F0;">splice</span><span style="color:#E1E4E8;">(index, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    // Handle game disconnect</span></span>
<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;"> (socket.gameId) {</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> game</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> games.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(socket.gameId);</span></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (game) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        socket.</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`game-\${</span><span style="color:#E1E4E8;">socket</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">gameId</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;player-disconnected&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">          playerId: socket.id,</span></span>
<span class="line"><span style="color:#E1E4E8;">          timestamp: Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#B392F0;">        endGame</span><span style="color:#E1E4E8;">(game);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> tryMatchPlayers</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#F97583;">  while</span><span style="color:#E1E4E8;"> (waitingPlayers.</span><span style="color:#79B8FF;">length</span><span style="color:#F97583;"> &gt;=</span><span style="color:#79B8FF;"> 2</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> player1</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> waitingPlayers.</span><span style="color:#B392F0;">shift</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> player2</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> waitingPlayers.</span><span style="color:#B392F0;">shift</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">    createGame</span><span style="color:#E1E4E8;">(player1, player2);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> createGame</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">player1</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">player2</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> gameId</span><span style="color:#F97583;"> =</span><span style="color:#9ECBFF;"> \`game-\${</span><span style="color:#E1E4E8;">Date</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">now</span><span style="color:#9ECBFF;">()</span><span style="color:#9ECBFF;">}-\${</span><span style="color:#E1E4E8;">Math</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">random</span><span style="color:#9ECBFF;">().</span><span style="color:#B392F0;">toString</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">36</span><span style="color:#9ECBFF;">).</span><span style="color:#B392F0;">substr</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">, </span><span style="color:#79B8FF;">9</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> game</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    id: gameId,</span></span>
<span class="line"><span style="color:#E1E4E8;">    players: [player1, player2],</span></span>
<span class="line"><span style="color:#E1E4E8;">    state: </span><span style="color:#B392F0;">initializeGameState</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    createdAt: Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    status: </span><span style="color:#9ECBFF;">&#39;active&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  games.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(gameId, game);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Join game room</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> socket1</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> io.sockets.sockets.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(player1.id);</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> socket2</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> io.sockets.sockets.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(player2.id);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">  if</span><span style="color:#E1E4E8;"> (socket1 </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> socket2) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    socket1.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`game-\${</span><span style="color:#E1E4E8;">gameId</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    socket2.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`game-\${</span><span style="color:#E1E4E8;">gameId</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    socket1.gameId </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gameId;</span></span>
<span class="line"><span style="color:#E1E4E8;">    socket2.gameId </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gameId;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    // Notify players</span></span>
<span class="line"><span style="color:#E1E4E8;">    io.</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`game-\${</span><span style="color:#E1E4E8;">gameId</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;game-started&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">      gameId,</span></span>
<span class="line"><span style="color:#E1E4E8;">      players: [player1, player2],</span></span>
<span class="line"><span style="color:#E1E4E8;">      gameState: game.state,</span></span>
<span class="line"><span style="color:#E1E4E8;">      timestamp: Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br></div></div><h2 id="real-time-collaboration-example" tabindex="-1">Real-time Collaboration Example <a class="header-anchor" href="#real-time-collaboration-example" aria-label="Permalink to &quot;Real-time Collaboration Example&quot;">​</a></h2><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Server } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;socket.io&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { quickSocketSetup } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;@amitkandar/response-handler&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> io</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Server</span><span style="color:#E1E4E8;">(httpServer);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">enhance</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">wrapper</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> quickSocketSetup</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&#39;development&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  logging: { enabled: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Document state</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> documents</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Map</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">io.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;connection&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">  // Join document</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#9ECBFF;">    &#39;join-document&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    wrapper</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">documentId</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">userId</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">documentId </span><span style="color:#F97583;">||</span><span style="color:#F97583;"> !</span><span style="color:#E1E4E8;">userId) {</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#E1E4E8;"> response.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">          { missingFields: [</span><span style="color:#9ECBFF;">&#39;documentId&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;userId&#39;</span><span style="color:#E1E4E8;">] },</span></span>
<span class="line"><span style="color:#9ECBFF;">          &#39;Document ID and user ID required&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        );</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Get or create document</span></span>
<span class="line"><span style="color:#F97583;">      let</span><span style="color:#E1E4E8;"> doc </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> documents.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(documentId);</span></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">doc) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        doc </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">          id: documentId,</span></span>
<span class="line"><span style="color:#E1E4E8;">          content: </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          collaborators: </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Map</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">          operations: [],</span></span>
<span class="line"><span style="color:#E1E4E8;">          version: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        };</span></span>
<span class="line"><span style="color:#E1E4E8;">        documents.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(documentId, doc);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Add collaborator</span></span>
<span class="line"><span style="color:#E1E4E8;">      doc.collaborators.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(socket.id, {</span></span>
<span class="line"><span style="color:#E1E4E8;">        userId,</span></span>
<span class="line"><span style="color:#E1E4E8;">        joinedAt: Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">        cursor: { line: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, column: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">      });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      socket.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`doc-\${</span><span style="color:#E1E4E8;">documentId</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      socket.documentId </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> documentId;</span></span>
<span class="line"><span style="color:#E1E4E8;">      socket.userId </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> userId;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        {</span></span>
<span class="line"><span style="color:#E1E4E8;">          document: {</span></span>
<span class="line"><span style="color:#E1E4E8;">            id: documentId,</span></span>
<span class="line"><span style="color:#E1E4E8;">            content: doc.content,</span></span>
<span class="line"><span style="color:#E1E4E8;">            version: doc.version,</span></span>
<span class="line"><span style="color:#E1E4E8;">            collaborators: Array.</span><span style="color:#B392F0;">from</span><span style="color:#E1E4E8;">(doc.collaborators.</span><span style="color:#B392F0;">values</span><span style="color:#E1E4E8;">()),</span></span>
<span class="line"><span style="color:#E1E4E8;">          },</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#9ECBFF;">        &#39;Joined document&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Notify other collaborators</span></span>
<span class="line"><span style="color:#E1E4E8;">      response.</span><span style="color:#B392F0;">toRoom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`doc-\${</span><span style="color:#E1E4E8;">documentId</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;collaborator-joined&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">        userId,</span></span>
<span class="line"><span style="color:#E1E4E8;">        socketId: socket.id,</span></span>
<span class="line"><span style="color:#E1E4E8;">        timestamp: Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">      });</span></span>
<span class="line"><span style="color:#E1E4E8;">    }),</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Text operation</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#9ECBFF;">    &#39;text-operation&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">    wrapper</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">operation</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">version</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">socket.documentId) {</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#E1E4E8;"> response.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Not in a document&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> doc</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> documents.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(socket.documentId);</span></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">doc) {</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#E1E4E8;"> response.</span><span style="color:#B392F0;">notFound</span><span style="color:#E1E4E8;">({ documentId: socket.documentId }, </span><span style="color:#9ECBFF;">&#39;Document not found&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Version check for operational transformation</span></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (version </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> doc.version) {</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#E1E4E8;"> response.</span><span style="color:#B392F0;">conflict</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">          { expectedVersion: doc.version, receivedVersion: version },</span></span>
<span class="line"><span style="color:#9ECBFF;">          &#39;Version conflict - please refresh&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        );</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Apply operation</span></span>
<span class="line"><span style="color:#F97583;">      try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">        const</span><span style="color:#79B8FF;"> transformedOp</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> applyOperation</span><span style="color:#E1E4E8;">(doc, operation);</span></span>
<span class="line"><span style="color:#E1E4E8;">        doc.version</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">        // Broadcast to other collaborators</span></span>
<span class="line"><span style="color:#E1E4E8;">        response.</span><span style="color:#B392F0;">toRoom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`doc-\${</span><span style="color:#E1E4E8;">socket</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">documentId</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;operation-applied&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">          operation: transformedOp,</span></span>
<span class="line"><span style="color:#E1E4E8;">          version: doc.version,</span></span>
<span class="line"><span style="color:#E1E4E8;">          authorId: socket.userId,</span></span>
<span class="line"><span style="color:#E1E4E8;">          timestamp: Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        response.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">          {</span></span>
<span class="line"><span style="color:#E1E4E8;">            version: doc.version,</span></span>
<span class="line"><span style="color:#E1E4E8;">            operation: transformedOp,</span></span>
<span class="line"><span style="color:#E1E4E8;">          },</span></span>
<span class="line"><span style="color:#9ECBFF;">          &#39;Operation applied&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        );</span></span>
<span class="line"><span style="color:#E1E4E8;">      } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        response.</span><span style="color:#B392F0;">badRequest</span><span style="color:#E1E4E8;">(error, </span><span style="color:#9ECBFF;">&#39;Invalid operation&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }),</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Cursor position update</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;cursor-update&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">socket.documentId) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> doc</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> documents.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(socket.documentId);</span></span>
<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;"> (doc </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> doc.collaborators.</span><span style="color:#B392F0;">has</span><span style="color:#E1E4E8;">(socket.id)) {</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> collaborator</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> doc.collaborators.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(socket.id);</span></span>
<span class="line"><span style="color:#E1E4E8;">      collaborator.cursor </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data.cursor;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">      // Broadcast cursor position</span></span>
<span class="line"><span style="color:#E1E4E8;">      socket.</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`doc-\${</span><span style="color:#E1E4E8;">socket</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">documentId</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;cursor-moved&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">        userId: socket.userId,</span></span>
<span class="line"><span style="color:#E1E4E8;">        cursor: data.cursor,</span></span>
<span class="line"><span style="color:#E1E4E8;">        timestamp: Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">      });</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Selection update</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;selection-update&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">socket.documentId) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    socket.</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`doc-\${</span><span style="color:#E1E4E8;">socket</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">documentId</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;selection-changed&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">      userId: socket.userId,</span></span>
<span class="line"><span style="color:#E1E4E8;">      selection: data.selection,</span></span>
<span class="line"><span style="color:#E1E4E8;">      timestamp: Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;disconnect&#39;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;"> (socket.documentId) {</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> doc</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> documents.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(socket.documentId);</span></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (doc) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        doc.collaborators.</span><span style="color:#B392F0;">delete</span><span style="color:#E1E4E8;">(socket.id);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">        // Notify other collaborators</span></span>
<span class="line"><span style="color:#E1E4E8;">        socket.</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`doc-\${</span><span style="color:#E1E4E8;">socket</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">documentId</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;collaborator-left&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">          userId: socket.userId,</span></span>
<span class="line"><span style="color:#E1E4E8;">          timestamp: Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">        // Clean up empty documents</span></span>
<span class="line"><span style="color:#F97583;">        if</span><span style="color:#E1E4E8;"> (doc.collaborators.size </span><span style="color:#F97583;">===</span><span style="color:#79B8FF;"> 0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          documents.</span><span style="color:#B392F0;">delete</span><span style="color:#E1E4E8;">(socket.documentId);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> applyOperation</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">doc</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">operation</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#6A737D;">  // Simplified operational transformation</span></span>
<span class="line"><span style="color:#F97583;">  switch</span><span style="color:#E1E4E8;"> (operation.type) {</span></span>
<span class="line"><span style="color:#F97583;">    case</span><span style="color:#9ECBFF;"> &#39;insert&#39;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      doc.content </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">        doc.content.</span><span style="color:#B392F0;">slice</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, operation.position) </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">        operation.text </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">        doc.content.</span><span style="color:#B392F0;">slice</span><span style="color:#E1E4E8;">(operation.position);</span></span>
<span class="line"><span style="color:#F97583;">      break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">    case</span><span style="color:#9ECBFF;"> &#39;delete&#39;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      doc.content </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">        doc.content.</span><span style="color:#B392F0;">slice</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, operation.position) </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">        doc.content.</span><span style="color:#B392F0;">slice</span><span style="color:#E1E4E8;">(operation.position </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> operation.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">      break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">    default</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#F97583;">      throw</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Unknown operation type&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  doc.operations.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(operation);</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#E1E4E8;"> operation;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br></div></div><h2 id="socket-io-client-examples" tabindex="-1">Socket.IO Client Examples <a class="header-anchor" href="#socket-io-client-examples" aria-label="Permalink to &quot;Socket.IO Client Examples&quot;">​</a></h2><h3 id="basic-client" tabindex="-1">Basic Client <a class="header-anchor" href="#basic-client" aria-label="Permalink to &quot;Basic Client&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> io </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;socket.io-client&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> socket</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> io</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;http://localhost:3001&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;connect&#39;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Connected to server&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // Send authentication</span></span>
<span class="line"><span style="color:#E1E4E8;">  socket.</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;authenticate&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">    token: </span><span style="color:#9ECBFF;">&#39;your-jwt-token&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    username: </span><span style="color:#9ECBFF;">&#39;john_doe&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;auth-result&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  if</span><span style="color:#E1E4E8;"> (data.success) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Authenticated successfully:&#39;</span><span style="color:#E1E4E8;">, data.data);</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Authentication failed:&#39;</span><span style="color:#E1E4E8;">, data.message);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;new-message&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">message</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;New message:&#39;</span><span style="color:#E1E4E8;">, message);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="react-client" tabindex="-1">React Client <a class="header-anchor" href="#react-client" aria-label="Permalink to &quot;React Client&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> React, { useEffect, useState } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;react&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> io </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;socket.io-client&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> ChatApp</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">socket</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">setSocket</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> useState</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">messages</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">setMessages</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> useState</span><span style="color:#E1E4E8;">([]);</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">newMessage</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">setNewMessage</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> useState</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  useEffect</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> newSocket</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> io</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;http://localhost:3001&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#B392F0;">    setSocket</span><span style="color:#E1E4E8;">(newSocket);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    newSocket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;new-message&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">message</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#B392F0;">      setMessages</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">prev</span><span style="color:#F97583;"> =&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">prev, message]);</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">    return</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> newSocket.</span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }, []);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#B392F0;"> sendMessage</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;"> (socket </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> newMessage.</span><span style="color:#B392F0;">trim</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      socket.</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;send-message&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">        message: newMessage,</span></span>
<span class="line"><span style="color:#E1E4E8;">        roomId: </span><span style="color:#9ECBFF;">&#39;general&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">      });</span></span>
<span class="line"><span style="color:#B392F0;">      setNewMessage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#B392F0;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#B392F0;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        {</span><span style="color:#FFAB70;">messages</span><span style="color:#E1E4E8;">.</span><span style="color:#FFAB70;">map</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">msg</span><span style="color:#F97583;"> =&gt;</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#F97583;">          &lt;</span><span style="color:#E1E4E8;">div key</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{msg.id}</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#B392F0;">strong</span><span style="color:#E1E4E8;">&gt;{msg.username}</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">&lt;/</span><span style="color:#B392F0;">strong</span><span style="color:#E1E4E8;">&gt; {msg.message}</span></span>
<span class="line"><span style="color:#F97583;">          &lt;/</span><span style="color:#E1E4E8;">div</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        ))}</span></span>
<span class="line"><span style="color:#F97583;">      &lt;/</span><span style="color:#E1E4E8;">div</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">      &lt;</span><span style="color:#FFAB70;">input</span></span>
<span class="line"><span style="color:#E1E4E8;">        value</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{newMessage}</span></span>
<span class="line"><span style="color:#E1E4E8;">        onChange</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{(e) =&gt; </span><span style="color:#B392F0;">setNewMessage</span><span style="color:#E1E4E8;">(e.target.value)}</span></span>
<span class="line"><span style="color:#E1E4E8;">        onKeyPress</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{(e) =&gt; e.key </span><span style="color:#F97583;">===</span><span style="color:#9ECBFF;"> &#39;Enter&#39;</span><span style="color:#F97583;"> &amp;&amp;</span><span style="color:#B392F0;"> sendMessage</span><span style="color:#E1E4E8;">()}</span></span>
<span class="line"><span style="color:#F97583;">      /&gt;</span></span>
<span class="line"><span style="color:#F97583;">      &lt;</span><span style="color:#E1E4E8;">button onClick</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{sendMessage}</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">Send</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">button</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">    &lt;/</span><span style="color:#E1E4E8;">div</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><h2 id="error-handling-patterns" tabindex="-1">Error Handling Patterns <a class="header-anchor" href="#error-handling-patterns" aria-label="Permalink to &quot;Error Handling Patterns&quot;">​</a></h2><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// Centralized error handling</span></span>
<span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;error-event&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  switch</span><span style="color:#E1E4E8;"> (data.error.type) {</span></span>
<span class="line"><span style="color:#F97583;">    case</span><span style="color:#9ECBFF;"> &#39;ValidationError&#39;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#B392F0;">      showValidationError</span><span style="color:#E1E4E8;">(data.error.message);</span></span>
<span class="line"><span style="color:#F97583;">      break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">    case</span><span style="color:#9ECBFF;"> &#39;AuthenticationError&#39;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#B392F0;">      redirectToLogin</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">      break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">    case</span><span style="color:#9ECBFF;"> &#39;RateLimitError&#39;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#B392F0;">      showRateLimitWarning</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">      break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">    default</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#B392F0;">      showGenericError</span><span style="color:#E1E4E8;">(data.message);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Retry logic</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> sendMessageWithRetry</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">messageData</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">maxRetries</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> 3</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">  let</span><span style="color:#E1E4E8;"> retries </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> 0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#B392F0;"> send</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    socket.</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;send-message&#39;</span><span style="color:#E1E4E8;">, messageData);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> timeout</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> setTimeout</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">        if</span><span style="color:#E1E4E8;"> (retries </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> maxRetries) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          retries</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">          console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`Retry attempt \${</span><span style="color:#E1E4E8;">retries</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#B392F0;">          send</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">          console.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Max retries reached&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#79B8FF;">      1000</span><span style="color:#F97583;"> *</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">pow</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, retries),</span></span>
<span class="line"><span style="color:#E1E4E8;">    ); </span><span style="color:#6A737D;">// Exponential backoff</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    socket.</span><span style="color:#B392F0;">once</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;message-sent&#39;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#B392F0;">      clearTimeout</span><span style="color:#E1E4E8;">(timeout);</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  send</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><p>This comprehensive set of examples covers the most common Socket.IO use cases with Response Handler, providing a solid foundation for building real-time applications.</p>`,18)]))}const F=n(e,[["render",o]]);export{b as __pageData,F as default};
